[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Type of wallet address for an ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "AccountWallet",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "AccountWallet"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Internal addresses are used by the wallet implementation to recieve\nchange and are not ordinarily shared. External addresses are for\nreceiving payments and are shared with the sender.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 53
                },
                "end": {
                  "line": 5,
                  "column": 51,
                  "offset": 236
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 53
            },
            "end": {
              "line": 5,
              "column": 51,
              "offset": 236
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 51,
          "offset": 236
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 18,
        "column": 0
      },
      "end": {
        "line": 24,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 63
        }
      },
      "file": "/home/p/Git/cashlib/src/AccountWallet.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/AccountWallet.js#L18-L24",
        "path": "src/AccountWallet.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "AccountWalletAddressType",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "StringLiteralType",
          "value": "internal"
        },
        {
          "type": "StringLiteralType",
          "value": "external"
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "AccountWalletAddressType",
        "kind": "typedef"
      }
    ],
    "namespace": "AccountWalletAddressType"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wallet for a single account derived from a BIP-0044 ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "DerivationPath",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "DerivationPath"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 53,
                  "offset": 52
                },
                "end": {
                  "line": 1,
                  "column": 75,
                  "offset": 74
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 75,
              "offset": 74
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This class internally creates sub-wallets for and facilitates issuing of\nexternal (public receiving) and internal (change) addresses.  It will track\naddresses used (issued) for any addresses issued with the ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 76
                },
                "end": {
                  "line": 5,
                  "column": 59,
                  "offset": 283
                },
                "indent": [
                  1,
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "nextExternalAddress",
              "position": {
                "start": {
                  "line": 5,
                  "column": 59,
                  "offset": 283
                },
                "end": {
                  "line": 5,
                  "column": 80,
                  "offset": 304
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and\n",
              "position": {
                "start": {
                  "line": 5,
                  "column": 80,
                  "offset": 304
                },
                "end": {
                  "line": 6,
                  "column": 1,
                  "offset": 309
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "nextInternalAddress",
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 309
                },
                "end": {
                  "line": 6,
                  "column": 22,
                  "offset": 330
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " methods - ie, it won't reissue the same address.  However,\nit is up to the client implementation to determine whether addresses have been\nused prior to instantiation (ie by scanning the blockchain) and calling\n",
              "position": {
                "start": {
                  "line": 6,
                  "column": 22,
                  "offset": 330
                },
                "end": {
                  "line": 9,
                  "column": 1,
                  "offset": 541
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "setUsedAddressIndex",
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 541
                },
                "end": {
                  "line": 9,
                  "column": 22,
                  "offset": 562
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " accordingly.",
              "position": {
                "start": {
                  "line": 9,
                  "column": 22,
                  "offset": 562
                },
                "end": {
                  "line": 9,
                  "column": 35,
                  "offset": 575
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 76
            },
            "end": {
              "line": 9,
              "column": 35,
              "offset": 575
            },
            "indent": [
              1,
              1,
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 9,
          "column": 35,
          "offset": 575
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 37,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 133,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/AccountWallet.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/AccountWallet.js#L38-L133",
        "path": "src/AccountWallet.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "constructorComment": {
      "description": "",
      "tags": [
        {
          "title": "hideconstructor",
          "description": null,
          "lineNumber": 1
        }
      ],
      "loc": {
        "start": {
          "line": 44,
          "column": 2
        },
        "end": {
          "line": 46,
          "column": 5
        }
      },
      "context": {
        "loc": {
          "start": {
            "line": 47,
            "column": 2
          },
          "end": {
            "line": 52,
            "column": 3
          }
        },
        "file": "/home/p/Git/cashlib/src/AccountWallet.js",
        "sortKey": "!/home/p/Git/cashlib/src/AccountWallet.js 00000047",
        "code": "{\n  _internalWallet: Wallet\n  _externalWallet: Wallet\n  _internalUsedIndex: number // Used change address index\n  _externalUsedIndex: number // Used external address index\n\n  /**\n   * @hideconstructor\n   */\n  constructor(externalWallet: Wallet, internalWallet: Wallet) {\n    this._externalWallet = externalWallet;\n    this._externalUsedIndex = -1;\n    this._internalWallet = internalWallet;\n    this._internalUsedIndex = -1;\n  }\n\n  /**\n   * Return highest used address index for nominated type\n   */\n  getUsedAddressIndex(type: AccountWalletAddressType): number {\n    return (type === 'external')\n      ? this._externalUsedIndex\n      : this._internalUsedIndex;\n  }\n\n  /**\n   * Update the highest used address index for the nominated type\n   */\n  setUsedAddressIndex(type: AccountWalletAddressType, addressIndex: number): void {\n    if (type === 'external') {\n      this._externalUsedIndex = addressIndex;\n    } else {\n      this._internalUsedIndex = addressIndex;\n    }\n  }\n\n  /**\n   * Returns next/first unused external shareable public key as an address\n   *\n   * This address can be shared publicly to receive payments\n   */\n  nextExternalAddress(network: Network): Address {\n    this._externalUsedIndex += 1;\n    const path = DerivationPath.fromSerialized(`M${this._externalUsedIndex}`);\n    const publicKey = this._externalWallet.getKey(path).getPublicKey();\n    return Address.fromPublicKey(publicKey, network);\n  }\n\n  /**\n   * Returns next/first unused internal change public key as an address\n   *\n   * This address should be used by wallet software to receive change\n   */\n  nextInternalAddress(network: Network): Address {\n    this._internalUsedIndex += 1;\n    const path = DerivationPath.fromSerialized(`M/${this._internalUsedIndex}`);\n    const publicKey = this._internalWallet.getKey(path).getPublicKey();\n    return Address.fromPublicKey(publicKey, network);\n  }\n\n  /**\n   * Create new AccountWallet instance using a seed and BIP44 derivation path\n   */\n  static fromSeed(seed: Data, accountPath: DerivationPath): AccountWallet {\n    // Validate derivation path (require BIP44 format)\n    const exampleText = \"(e.g.  m44'0'0')\";\n    assert(accountPath.numLevels === 3, `Expected a 3 level derivation path ${exampleText}`);\n    assert(accountPath.isPrivate, \"Expected derivation path to begin with 'm' (private)\");\n    const firstIndex = accountPath.levels[0].childNumber;\n    assert(firstIndex === purposeBip44, `Expected first derivation path level to be 44 ${exampleText}`);\n    const secondIndex = accountPath.levels[1].childNumber;\n    assert(coinTypes.indexOf(secondIndex) > -1, `Unrecognized coin type (${secondIndex})`);\n\n    // Generate master wallet\n    const masterWallet = Wallet.fromSeed(seed);\n\n    // Get keys for and create account wallet\n    const accountPrivateKey = masterWallet.getKey(accountPath);\n    const accountPublicKey = masterWallet.getKey(accountPath.toPublic());\n    const accountWallet = new Wallet(accountPublicKey, accountPrivateKey);\n\n    // Get keys for and create external / receiving wallet\n    const externalPath = DerivationPath.fromSerialized('m/0');\n    const externalPrivateKey = accountWallet.getKey(externalPath);\n    const externalPublicKey = accountWallet.getKey(externalPath.toPublic());\n    const externalWallet = new Wallet(externalPublicKey, externalPrivateKey);\n\n    // Get keys for and create internal / change wallet\n    const internalPath = DerivationPath.fromSerialized('m/1');\n    const internalPrivateKey = accountWallet.getKey(internalPath);\n    const internalPublicKey = accountWallet.getKey(internalPath.toPublic());\n    const internalWallet = new Wallet(internalPublicKey, internalPrivateKey);\n\n    return new AccountWallet(externalWallet, internalWallet);\n  }\n}"
      },
      "augments": [],
      "errors": [],
      "examples": [],
      "params": [],
      "properties": [],
      "returns": [],
      "sees": [],
      "throws": [],
      "todos": [],
      "hideconstructor": true
    },
    "name": "AccountWallet",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return highest used address index for nominated type",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 53,
                    "offset": 52
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 53,
                "offset": 52
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 57,
                "column": 2
              },
              "end": {
                "line": 61,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/AccountWallet.js#L57-L61",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "type",
              "lineNumber": 57,
              "type": {
                "type": "NameExpression",
                "name": "AccountWalletAddressType"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getUsedAddressIndex",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "getUsedAddressIndex",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "AccountWallet#getUsedAddressIndex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update the highest used address index for the nominated type",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 61,
                    "offset": 60
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 61,
                "offset": 60
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 63,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 66,
                "column": 2
              },
              "end": {
                "line": 72,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/AccountWallet.js#L66-L72",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "type",
              "lineNumber": 66,
              "type": {
                "type": "NameExpression",
                "name": "AccountWalletAddressType"
              }
            },
            {
              "title": "param",
              "name": "addressIndex",
              "lineNumber": 66,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "VoidLiteral"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "setUsedAddressIndex",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "setUsedAddressIndex",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "AccountWallet#setUsedAddressIndex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns next/first unused external shareable public key as an address",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 70,
                        "offset": 69
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 70,
                    "offset": 69
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This address can be shared publicly to receive payments",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 71
                      },
                      "end": {
                        "line": 3,
                        "column": 56,
                        "offset": 126
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 71
                  },
                  "end": {
                    "line": 3,
                    "column": 56,
                    "offset": 126
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 56,
                "offset": 126
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 2
              },
              "end": {
                "line": 84,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/AccountWallet.js#L79-L84",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "network",
              "lineNumber": 79,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Address"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "nextExternalAddress",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "nextExternalAddress",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "AccountWallet#nextExternalAddress"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns next/first unused internal change public key as an address",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 67,
                        "offset": 66
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 67,
                    "offset": 66
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This address should be used by wallet software to receive change",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 68
                      },
                      "end": {
                        "line": 3,
                        "column": 65,
                        "offset": 132
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 68
                  },
                  "end": {
                    "line": 3,
                    "column": 65,
                    "offset": 132
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 65,
                "offset": 132
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 91,
                "column": 2
              },
              "end": {
                "line": 96,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/AccountWallet.js#L91-L96",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "network",
              "lineNumber": 91,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Address"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "nextInternalAddress",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "nextInternalAddress",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "AccountWallet#nextInternalAddress"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Create new AccountWallet instance using a seed and BIP44 derivation path",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 73,
                        "offset": 72
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 73,
                    "offset": 72
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 73,
                "offset": 72
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 101,
                "column": 2
              },
              "end": {
                "line": 132,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/AccountWallet.js#L101-L132",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "seed",
              "lineNumber": 101,
              "type": {
                "type": "NameExpression",
                "name": "Data"
              }
            },
            {
              "title": "param",
              "name": "accountPath",
              "lineNumber": 101,
              "type": {
                "type": "NameExpression",
                "name": "DerivationPath"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "AccountWallet"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromSeed",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "fromSeed",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "AccountWallet.fromSeed"
        }
      ]
    },
    "path": [
      {
        "name": "AccountWallet",
        "kind": "class"
      }
    ],
    "namespace": "AccountWallet"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin address",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "Warning",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 2,
                      "offset": 20
                    },
                    "end": {
                      "line": 3,
                      "column": 9,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 19
                },
                "end": {
                  "line": 3,
                  "column": 10,
                  "offset": 28
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " this class may be deprecated in the near future in favor of\nadditional methods on ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 10,
                  "offset": 28
                },
                "end": {
                  "line": 4,
                  "column": 23,
                  "offset": 111
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "link",
              "url": "PublicKey",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "PublicKey"
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 23,
                  "offset": 111
                },
                "end": {
                  "line": 4,
                  "column": 40,
                  "offset": 128
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 19
            },
            "end": {
              "line": 4,
              "column": 40,
              "offset": 128
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 40,
          "offset": 128
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 10,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 68,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Address.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Address.js#L16-L68",
        "path": "src/Address.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Data"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Address",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns public representation of address",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 41,
                "offset": 40
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 17,
              "column": 2
            },
            "end": {
              "line": 19,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 20,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Address.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Address.js#L20-L22",
              "path": "src/Address.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toString",
          "kind": "function",
          "memberof": "Address",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Address",
              "kind": "class"
            },
            {
              "name": "toString",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Address#toString"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns public key hash",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 24,
                        "offset": 23
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 24,
                    "offset": 23
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 24,
                "offset": 23
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 24,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 27,
                "column": 2
              },
              "end": {
                "line": 30,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Address.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Address.js#L27-L30",
              "path": "src/Address.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toPublicKeyHash",
          "kind": "function",
          "memberof": "Address",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Address",
              "kind": "class"
            },
            {
              "name": "toPublicKeyHash",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Address#toPublicKeyHash"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Decodes public representation of address",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 41,
                "offset": 40
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 32,
              "column": 2
            },
            "end": {
              "line": 34,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 35,
                "column": 2
              },
              "end": {
                "line": 37,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Address.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Address.js#L35-L37",
              "path": "src/Address.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "address",
              "lineNumber": 35,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Address"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromString",
          "kind": "function",
          "memberof": "Address",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Address",
              "kind": "class"
            },
            {
              "name": "fromString",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Address.fromString"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns an Address object from a public key hash (the representation used\nin the Bitcoin protocol.)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 26,
                        "offset": 99
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 26,
                    "offset": 99
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 26,
                "offset": 99
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 43,
                "column": 2
              },
              "end": {
                "line": 60,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Address.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Address.js#L43-L60",
              "path": "src/Address.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "publicKeyHash",
              "lineNumber": 43,
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            },
            {
              "title": "param",
              "name": "network",
              "lineNumber": 43,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Address"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromPublicKeyHash",
          "kind": "function",
          "memberof": "Address",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Address",
              "kind": "class"
            },
            {
              "name": "fromPublicKeyHash",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Address.fromPublicKeyHash"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates an Address instance from a ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "PublicKey",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "PublicKey"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ".",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "end": {
                        "line": 1,
                        "column": 54,
                        "offset": 53
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 54,
                    "offset": 53
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 54,
                "offset": 53
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 65,
                "column": 2
              },
              "end": {
                "line": 67,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Address.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Address.js#L65-L67",
              "path": "src/Address.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "publicKey",
              "lineNumber": 65,
              "type": {
                "type": "NameExpression",
                "name": "PublicKey"
              }
            },
            {
              "title": "param",
              "name": "network",
              "lineNumber": 65,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Address"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromPublicKey",
          "kind": "function",
          "memberof": "Address",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Address",
              "kind": "class"
            },
            {
              "name": "fromPublicKey",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Address.fromPublicKey"
        }
      ]
    },
    "path": [
      {
        "name": "Address",
        "kind": "class"
      }
    ],
    "namespace": "Address"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Simple generic cache with automatic pruning.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Automatic pruning is based on max size (number of entries) and how recently\neach entry was accessed (ie via ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 46
                },
                "end": {
                  "line": 4,
                  "column": 33,
                  "offset": 154
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "add",
              "position": {
                "start": {
                  "line": 4,
                  "column": 33,
                  "offset": 154
                },
                "end": {
                  "line": 4,
                  "column": 38,
                  "offset": 159
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " and ",
              "position": {
                "start": {
                  "line": 4,
                  "column": 38,
                  "offset": 159
                },
                "end": {
                  "line": 4,
                  "column": 43,
                  "offset": 164
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "get",
              "position": {
                "start": {
                  "line": 4,
                  "column": 43,
                  "offset": 164
                },
                "end": {
                  "line": 4,
                  "column": 48,
                  "offset": 169
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " methods). Cache is a generic\nclass where ",
              "position": {
                "start": {
                  "line": 4,
                  "column": 48,
                  "offset": 169
                },
                "end": {
                  "line": 5,
                  "column": 13,
                  "offset": 211
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "inlineCode",
              "value": "S",
              "position": {
                "start": {
                  "line": 5,
                  "column": 13,
                  "offset": 211
                },
                "end": {
                  "line": 5,
                  "column": 16,
                  "offset": 214
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is the cache entry signature type and ",
              "position": {
                "start": {
                  "line": 5,
                  "column": 16,
                  "offset": 214
                },
                "end": {
                  "line": 5,
                  "column": 55,
                  "offset": 253
                },
                "indent": []
              }
            },
            {
              "type": "inlineCode",
              "value": "V",
              "position": {
                "start": {
                  "line": 5,
                  "column": 55,
                  "offset": 253
                },
                "end": {
                  "line": 5,
                  "column": 58,
                  "offset": 256
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " is the value type.",
              "position": {
                "start": {
                  "line": 5,
                  "column": 58,
                  "offset": 256
                },
                "end": {
                  "line": 5,
                  "column": 77,
                  "offset": 275
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 46
            },
            "end": {
              "line": 5,
              "column": 77,
              "offset": 275
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 77,
          "offset": 275
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Cache.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Cache.js#L10-L65",
        "path": "src/Cache.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "maxSize",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Cache",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Size (number of entries) in cache",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 34,
                "offset": 33
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 19,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 22,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 48
              }
            },
            "file": "/home/p/Git/cashlib/src/Cache.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Cache.js#L22-L22",
              "path": "src/Cache.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "size",
          "kind": "member",
          "memberof": "Cache",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cache",
              "kind": "class"
            },
            {
              "name": "size",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Cache#size"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a value to the Cache",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 26,
                        "offset": 25
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 26,
                    "offset": 25
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 26,
                "offset": 25
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 24,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 27,
                "column": 2
              },
              "end": {
                "line": 37,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Cache.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Cache.js#L27-L37",
              "path": "src/Cache.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "signature",
              "lineNumber": 27,
              "type": {
                "type": "NameExpression",
                "name": "S"
              }
            },
            {
              "title": "param",
              "name": "value",
              "lineNumber": 27,
              "type": {
                "type": "NameExpression",
                "name": "V"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "VoidLiteral"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "add",
          "kind": "function",
          "memberof": "Cache",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cache",
              "kind": "class"
            },
            {
              "name": "add",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cache#add"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns a value from the cache or ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "undefined",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " not found",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 41,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 42,
                "column": 2
              },
              "end": {
                "line": 51,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Cache.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Cache.js#L42-L51",
              "path": "src/Cache.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "signature",
              "lineNumber": 42,
              "type": {
                "type": "NameExpression",
                "name": "S"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "V"
                  },
                  {
                    "type": "VoidLiteral"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "get",
          "kind": "function",
          "memberof": "Cache",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cache",
              "kind": "class"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cache#get"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Cache",
        "kind": "class"
      }
    ],
    "namespace": "Cache"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The parameters that, when taken together, define the elliptic curve",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 68,
          "offset": 67
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 7,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Curve.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Curve.js#L5-L7",
        "path": "src/Curve.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "field",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "property",
        "name": "basePoint",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Point"
        }
      },
      {
        "title": "property",
        "name": "order",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "property",
        "name": "elementA",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "property",
        "name": "elementB",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "property",
        "name": "cofactor",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CurveDomainParameters",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "field",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        },
        {
          "type": "FieldType",
          "key": "basePoint",
          "value": {
            "type": "NameExpression",
            "name": "Point"
          }
        },
        {
          "type": "FieldType",
          "key": "order",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        },
        {
          "type": "FieldType",
          "key": "elementA",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        },
        {
          "type": "FieldType",
          "key": "elementB",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        },
        {
          "type": "FieldType",
          "key": "cofactor",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CurveDomainParameters",
        "kind": "typedef"
      }
    ],
    "namespace": "CurveDomainParameters"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class representing an elliptic curve.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 38,
          "offset": 37
        }
      }
    },
    "tags": [
      {
        "title": "package",
        "description": null,
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 17,
        "column": 0
      },
      "end": {
        "line": 20,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Curve.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Curve.js#L21-L69",
        "path": "src/Curve.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "domainParameters",
        "lineNumber": 29,
        "type": {
          "type": "NameExpression",
          "name": "CurveDomainParameters"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Curve",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The curve's field, aka 'p' - an integer specifying the finite field",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 68,
                        "offset": 67
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 68,
                    "offset": 67
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 68,
                "offset": 67
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 41,
                "column": 2
              },
              "end": {
                "line": 41,
                "column": 45
              }
            },
            "file": "/home/p/Git/cashlib/src/Curve.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Curve.js#L41-L41",
              "path": "src/Curve.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "field",
          "kind": "member",
          "memberof": "Curve",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Curve",
              "kind": "class"
            },
            {
              "name": "field",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Curve#field"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The curve's base point, aka 'G = (xG, yG)'",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 43,
                "offset": 42
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 43,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 46,
                "column": 2
              },
              "end": {
                "line": 46,
                "column": 52
              }
            },
            "file": "/home/p/Git/cashlib/src/Curve.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Curve.js#L46-L46",
              "path": "src/Curve.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Point"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "basePoint",
          "kind": "member",
          "memberof": "Curve",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Curve",
              "kind": "class"
            },
            {
              "name": "basePoint",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Curve#basePoint"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The curve's order, aka 'n' - a prime which is the order of basePoint/G",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 71,
                        "offset": 70
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 71,
                    "offset": 70
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 71,
                "offset": 70
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 48,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 51,
                "column": 2
              },
              "end": {
                "line": 51,
                "column": 45
              }
            },
            "file": "/home/p/Git/cashlib/src/Curve.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Curve.js#L51-L51",
              "path": "src/Curve.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "order",
          "kind": "member",
          "memberof": "Curve",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Curve",
              "kind": "class"
            },
            {
              "name": "order",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Curve#order"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The curve's first element value, aka 'a' - one of two elements specifying the curve",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 84,
                        "offset": 83
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 84,
                    "offset": 83
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 84,
                "offset": 83
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 57,
                "column": 2
              },
              "end": {
                "line": 57,
                "column": 51
              }
            },
            "file": "/home/p/Git/cashlib/src/Curve.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Curve.js#L57-L57",
              "path": "src/Curve.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "elementA",
          "kind": "member",
          "memberof": "Curve",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Curve",
              "kind": "class"
            },
            {
              "name": "elementA",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Curve#elementA"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The curve's second element value, aka 'b' - one of two elements specifying the curve",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 85,
                        "offset": 84
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 85,
                    "offset": 84
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 85,
                "offset": 84
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 62,
                "column": 2
              },
              "end": {
                "line": 62,
                "column": 51
              }
            },
            "file": "/home/p/Git/cashlib/src/Curve.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Curve.js#L62-L62",
              "path": "src/Curve.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "elementB",
          "kind": "member",
          "memberof": "Curve",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Curve",
              "kind": "class"
            },
            {
              "name": "elementB",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Curve#elementB"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The curve's cofactor, aka 'h'",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 30,
                "offset": 29
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 68,
                "column": 2
              },
              "end": {
                "line": 68,
                "column": 51
              }
            },
            "file": "/home/p/Git/cashlib/src/Curve.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Curve.js#L68-L68",
              "path": "src/Curve.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "cofactor",
          "kind": "member",
          "memberof": "Curve",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Curve",
              "kind": "class"
            },
            {
              "name": "cofactor",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Curve#cofactor"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Curve",
        "kind": "class"
      }
    ],
    "namespace": "Curve"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Point on Eliptic Curve",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Note: methods add, double and multiply relate to elliptic curve point\nmultiplication and not regular math operations.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 24
                },
                "end": {
                  "line": 4,
                  "column": 48,
                  "offset": 141
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 24
            },
            "end": {
              "line": 4,
              "column": 48,
              "offset": 141
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Note: since we presently only use secp256k1, some simplifications are possible\nin elliptic curve point multiplication.  If other curves are implemented,\nthese may not apply and this class may need to be updated.",
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 143
                },
                "end": {
                  "line": 8,
                  "column": 59,
                  "offset": 354
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 143
            },
            "end": {
              "line": 8,
              "column": 59,
              "offset": 354
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 8,
          "column": 59,
          "offset": 354
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 10,
        "column": 0
      },
      "end": {
        "line": 19,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 203,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/CurvePoint.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L20-L203",
        "path": "src/CurvePoint.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Point"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CurvePoint",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return point as bytes",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 22,
                        "offset": 21
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 22,
                    "offset": 21
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the point as a 33 or 65 byte array depending on wether\nthe compressed argument is true or not.  The first byte indicates\nwhether the data is uncompressed (0x04), or compressed(0x02 or 0x03).",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 23
                      },
                      "end": {
                        "line": 5,
                        "column": 70,
                        "offset": 221
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 23
                  },
                  "end": {
                    "line": 5,
                    "column": 70,
                    "offset": 221
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 5,
                "column": 70,
                "offset": 221
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 115,
                "column": 2
              },
              "end": {
                "line": 133,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L115-L133",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "compressed",
              "lineNumber": 115,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "default": "true"
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toBytes",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "toBytes",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "CurvePoint#toBytes"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return point as hex string",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 27,
                    "offset": 26
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the point as a 66 or 130 length string.  This\nis the same data as is returned by ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 28
                      },
                      "end": {
                        "line": 4,
                        "column": 36,
                        "offset": 117
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "toBytes",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 36,
                        "offset": 117
                      },
                      "end": {
                        "line": 4,
                        "column": 45,
                        "offset": 126
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " but in\nhex string format.",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 45,
                        "offset": 126
                      },
                      "end": {
                        "line": 5,
                        "column": 19,
                        "offset": 152
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 28
                  },
                  "end": {
                    "line": 5,
                    "column": 19,
                    "offset": 152
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 5,
                "column": 19,
                "offset": 152
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 135,
              "column": 2
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 142,
                "column": 2
              },
              "end": {
                "line": 145,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L142-L145",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "compressed",
              "lineNumber": 142,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "default": "true"
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toHex",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "toHex",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "CurvePoint#toHex"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return a new point from adding one point to another.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 53,
                    "offset": 52
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The term 'Add' in this context refers to elliptic curve arithmetic and\nnot regular addition.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 54
                      },
                      "end": {
                        "line": 4,
                        "column": 22,
                        "offset": 146
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 54
                  },
                  "end": {
                    "line": 4,
                    "column": 22,
                    "offset": 146
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 22,
                "offset": 146
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 21,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 27,
                "column": 2
              },
              "end": {
                "line": 51,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L27-L51",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "pointA",
              "lineNumber": 27,
              "type": {
                "type": "NameExpression",
                "name": "Point"
              }
            },
            {
              "title": "param",
              "name": "pointB",
              "lineNumber": 27,
              "type": {
                "type": "NameExpression",
                "name": "Point"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "add",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "add",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "CurvePoint.add"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return a new point by doubling the provided point.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 51,
                        "offset": 50
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 51,
                    "offset": 50
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "See ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 52
                      },
                      "end": {
                        "line": 3,
                        "column": 5,
                        "offset": 56
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "https://en.wikipedia.org/wiki/Elliptic_curve_point_multiplication#Point_doubling",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Point doubling"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 5,
                        "offset": 56
                      },
                      "end": {
                        "line": 3,
                        "column": 108,
                        "offset": 159
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 52
                  },
                  "end": {
                    "line": 3,
                    "column": 108,
                    "offset": 159
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 108,
                "offset": 159
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 57,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 58,
                "column": 2
              },
              "end": {
                "line": 83,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L58-L83",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "point",
              "lineNumber": 58,
              "type": {
                "type": "NameExpression",
                "name": "Point"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "double",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "double",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "CurvePoint.double"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return a curve point by multiplying the given value.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 53,
                    "offset": 52
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This is commonly used to derive a public key from a private key.\nSee ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 54
                      },
                      "end": {
                        "line": 4,
                        "column": 5,
                        "offset": 123
                      },
                      "indent": [
                        1
                      ]
                    }
                  },
                  {
                    "type": "link",
                    "url": "https://en.wikipedia.org/wiki/Elliptic_curve_point_multiplication",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Elliptic curve point multiplication"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 5,
                        "offset": 123
                      },
                      "end": {
                        "line": 4,
                        "column": 114,
                        "offset": 232
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 54
                  },
                  "end": {
                    "line": 4,
                    "column": 114,
                    "offset": 232
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 114,
                "offset": 232
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 85,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 91,
                "column": 2
              },
              "end": {
                "line": 106,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L91-L106",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 91,
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "multiply",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "multiply",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "CurvePoint.multiply"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Use elliptic curve point multiplication to derive the point (public key) on\nsecp256k1 curve for the given integer (private key)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 52,
                        "offset": 127
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 52,
                    "offset": 127
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 52,
                "offset": 127
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 151,
                "column": 2
              },
              "end": {
                "line": 154,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L151-L154",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 151,
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromBigInt",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "fromBigInt",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "CurvePoint.fromBigInt"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Use elliptic curve point multiplication to derive the point (public key) on\nsecp256k1 curve for the given integer (private key) provided in hex string format",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 82,
                        "offset": 157
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 82,
                    "offset": 157
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 82,
                "offset": 157
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 156,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 160,
                "column": 2
              },
              "end": {
                "line": 163,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L160-L163",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "hex",
              "lineNumber": 160,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromHex",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "fromHex",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "CurvePoint.fromHex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Use elliptic curve point multiplication to derive the point (public key) on\nsecp256k1 curve for the given integer (private key) provided in bytes",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 70,
                        "offset": 145
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 70,
                    "offset": 145
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 70,
                "offset": 145
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 169,
                "column": 2
              },
              "end": {
                "line": 202,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/CurvePoint.js#L169-L202",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "bytes",
              "lineNumber": 169,
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromBytes",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "fromBytes",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "CurvePoint.fromBytes"
        }
      ]
    },
    "path": [
      {
        "name": "CurvePoint",
        "kind": "class"
      }
    ],
    "namespace": "CurvePoint"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Base/wrapper class for objects that primarily consist or derive from data in bytes",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 83,
              "offset": 82
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 83,
          "offset": 82
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 8,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Data.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Data.js#L9-L75",
        "path": "src/Data.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "bytes",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Uint8Array"
            },
            {
              "type": "NameExpression",
              "name": "Buffer"
            },
            {
              "type": "NameExpression",
              "name": "BigInt"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Data",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return data as a array of unsigned integers betwen 0 and 255 (ie 8 bit bytes)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 78,
                        "offset": 77
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 78,
                    "offset": 77
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 78,
                "offset": 77
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 24,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 27,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Data.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Data.js#L27-L29",
              "path": "src/Data.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toBytes",
          "kind": "function",
          "memberof": "Data",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Data",
              "kind": "class"
            },
            {
              "name": "toBytes",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Data#toBytes"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return data as a hex string",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 28,
                        "offset": 27
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 28,
                    "offset": 27
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 28,
                "offset": 27
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 2
              },
              "end": {
                "line": 36,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Data.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Data.js#L34-L36",
              "path": "src/Data.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toHex",
          "kind": "function",
          "memberof": "Data",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Data",
              "kind": "class"
            },
            {
              "name": "toHex",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Data#toHex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return data as a regular array",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 31,
                        "offset": 30
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 31,
                    "offset": 30
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 31,
                "offset": 30
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 41,
                "column": 2
              },
              "end": {
                "line": 43,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Data.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Data.js#L41-L43",
              "path": "src/Data.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toArray",
          "kind": "function",
          "memberof": "Data",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Data",
              "kind": "class"
            },
            {
              "name": "toArray",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Data#toArray"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return data as a big integer",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 29,
                    "offset": 28
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 29,
                "offset": 28
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 45,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 48,
                "column": 2
              },
              "end": {
                "line": 50,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Data.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Data.js#L48-L50",
              "path": "src/Data.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toBigInt",
          "kind": "function",
          "memberof": "Data",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Data",
              "kind": "class"
            },
            {
              "name": "toBigInt",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Data#toBigInt"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return data hashed with SHA-256 and then hashed again with RIPEMD-160.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 71,
                        "offset": 70
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 71,
                    "offset": 70
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 71,
                "offset": 70
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 55,
                "column": 2
              },
              "end": {
                "line": 63,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Data.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Data.js#L55-L63",
              "path": "src/Data.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toHash160",
          "kind": "function",
          "memberof": "Data",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Data",
              "kind": "class"
            },
            {
              "name": "toHash160",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Data#toHash160"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Create instance of ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "Data",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Data"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "end": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " from a hex string",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Note: The author doesn't know how to make 'this' polymorphic in flow-type;\nOverride (replicate) this method in child classes to avoid type warnings.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 51
                      },
                      "end": {
                        "line": 4,
                        "column": 74,
                        "offset": 199
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 51
                  },
                  "end": {
                    "line": 4,
                    "column": 74,
                    "offset": 199
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 74,
                "offset": 199
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 71,
                "column": 2
              },
              "end": {
                "line": 74,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Data.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Data.js#L71-L74",
              "path": "src/Data.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "hex",
              "lineNumber": 71,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Data"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromHex",
          "kind": "function",
          "memberof": "Data",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Data",
              "kind": "class"
            },
            {
              "name": "fromHex",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Data.fromHex"
        }
      ]
    },
    "path": [
      {
        "name": "Data",
        "kind": "class"
      }
    ],
    "namespace": "Data"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class for deserializing data",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This class is instantiated with data as 8-bit wide bytes in some (undefined here)\nserializiation format.  It reads that data in various sized chunks\nin response to different method calls and keeps track of which bytes\nhave already been consumed for the next request.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 30
                },
                "end": {
                  "line": 6,
                  "column": 49,
                  "offset": 296
                },
                "indent": [
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 30
            },
            "end": {
              "line": 6,
              "column": 49,
              "offset": 296
            },
            "indent": [
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 6,
          "column": 49,
          "offset": 296
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 4,
        "column": 0
      },
      "end": {
        "line": 11,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 182,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Deserializer.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L12-L182",
        "path": "src/Deserializer.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "data",
        "lineNumber": 16,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Uint8Array"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Deserializer",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the next 1 byte from the serialized data as an unsigned 8 bit integer",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 78,
                        "offset": 77
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 78,
                    "offset": 77
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 78,
                "offset": 77
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 2
              },
              "end": {
                "line": 38,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L34-L38",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getUint8",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getUint8",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getUint8"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the next 2 bytes from the serialized data as an unsigned 16 bit integer",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 80,
                        "offset": 79
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 80,
                    "offset": 79
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 80,
                "offset": 79
              }
            }
          },
          "tags": [
            {
              "title": "todo",
              "description": "provide option for endianness",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 40,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 45,
                "column": 2
              },
              "end": {
                "line": 49,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L45-L49",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [
            {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "provide option for endianness",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                }
              }
            }
          ],
          "name": "getUint16",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getUint16",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getUint16"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the next 4 bytes from the serialized data as an unsigned 32 bit integer",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 80,
                        "offset": 79
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 80,
                    "offset": 79
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 80,
                "offset": 79
              }
            }
          },
          "tags": [
            {
              "title": "todo",
              "description": "provide option for endianness",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 55,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 56,
                "column": 2
              },
              "end": {
                "line": 60,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L56-L60",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [
            {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "provide option for endianness",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                }
              }
            }
          ],
          "name": "getUint32",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getUint32",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getUint32"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the next 8 bytes from the serialized data as a signed 64 bit integer",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 77,
                        "offset": 76
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 77,
                    "offset": 76
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 77,
                "offset": 76
              }
            }
          },
          "tags": [
            {
              "title": "todo",
              "description": "provide option for endianness",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 67,
                "column": 2
              },
              "end": {
                "line": 93,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L67-L93",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [
            {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "provide option for endianness",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                }
              }
            }
          ],
          "name": "getInt64",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getInt64",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getInt64"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the next 8 bytes from the serialized data as an unsigned 64 bit integer",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 80,
                        "offset": 79
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 80,
                    "offset": 79
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 80,
                "offset": 79
              }
            }
          },
          "tags": [
            {
              "title": "todo",
              "description": "provide option for endianness",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 100,
                "column": 2
              },
              "end": {
                "line": 111,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L100-L111",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [
            {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "provide option for endianness",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 30,
                          "offset": 29
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 30,
                      "offset": 29
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 30,
                  "offset": 29
                }
              }
            }
          ],
          "name": "getUInt64",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getUInt64",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getUInt64"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 8,
                        "offset": 7
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "length",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 8,
                        "offset": 7
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " number of raw bytes unprocessed from the serialized data",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "end": {
                        "line": 1,
                        "column": 73,
                        "offset": 72
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 73,
                    "offset": 72
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 73,
                "offset": 72
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 113,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 116,
                "column": 2
              },
              "end": {
                "line": 124,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L116-L124",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "length",
              "lineNumber": 116,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getBytes",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getBytes",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getBytes"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 8,
                        "offset": 7
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "length",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 8,
                        "offset": 7
                      },
                      "end": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " number of raw bytes as a hex string from the serialized data",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 16,
                        "offset": 15
                      },
                      "end": {
                        "line": 1,
                        "column": 77,
                        "offset": 76
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 77,
                    "offset": 76
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Note: returned string is twice the length of the requested bytes ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 78
                      },
                      "end": {
                        "line": 3,
                        "column": 66,
                        "offset": 143
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "length",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 66,
                        "offset": 143
                      },
                      "end": {
                        "line": 3,
                        "column": 74,
                        "offset": 151
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 78
                  },
                  "end": {
                    "line": 3,
                    "column": 74,
                    "offset": 151
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 74,
                "offset": 151
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 126,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 131,
                "column": 2
              },
              "end": {
                "line": 137,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L131-L137",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "length",
              "lineNumber": 131,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "reverse",
              "lineNumber": 131,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "default": "false"
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getBytesString",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getBytesString",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getBytesString"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return compactSize unsigned integer from serialized data",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 57,
                        "offset": 56
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 57,
                    "offset": 56
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "See ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 58
                      },
                      "end": {
                        "line": 3,
                        "column": 5,
                        "offset": 62
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "https://bitcoin.org/en/developer-reference#compactsize-unsigned-integers",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Compactsize unsigned integers"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 5,
                        "offset": 62
                      },
                      "end": {
                        "line": 3,
                        "column": 115,
                        "offset": 172
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 58
                  },
                  "end": {
                    "line": 3,
                    "column": 115,
                    "offset": 172
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 115,
                "offset": 172
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 160,
                "column": 2
              },
              "end": {
                "line": 181,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Deserializer.js#L160-L181",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getCompactSize",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getCompactSize",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getCompactSize"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Deserializer",
        "kind": "class"
      }
    ],
    "namespace": "Deserializer"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A transaction input",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 20,
          "offset": 19
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 7,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Input.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Input.js#L8-L50",
        "path": "src/Input.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "transactionId",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "outputIndex",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "signatureScript",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      },
      {
        "title": "param",
        "name": "sequence",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "DEFAULT_SEQUENCE"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Input",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The id of the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "Transaction",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Transaction"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 15,
                        "offset": 14
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " containing the output that this input spends",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "end": {
                        "line": 1,
                        "column": 79,
                        "offset": 78
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 79,
                    "offset": 78
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 79,
                "offset": 78
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 29,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 61
              }
            },
            "file": "/home/p/Git/cashlib/src/Input.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Input.js#L29-L29",
              "path": "src/Input.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "transactionId",
          "kind": "member",
          "memberof": "Input",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Input",
              "kind": "class"
            },
            {
              "name": "transactionId",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Input#transactionId"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The index of the output that this input spends",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 47,
                        "offset": 46
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 47,
                    "offset": 46
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 47,
                "offset": 46
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 2
              },
              "end": {
                "line": 34,
                "column": 57
              }
            },
            "file": "/home/p/Git/cashlib/src/Input.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Input.js#L34-L34",
              "path": "src/Input.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "outputIndex",
          "kind": "member",
          "memberof": "Input",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Input",
              "kind": "class"
            },
            {
              "name": "outputIndex",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Input#outputIndex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The signature script (aka ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "scriptSig",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": ") for this input",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "end": {
                        "line": 1,
                        "column": 54,
                        "offset": 53
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 54,
                    "offset": 53
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 54,
                "offset": 53
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 39,
                "column": 2
              },
              "end": {
                "line": 39,
                "column": 69
              }
            },
            "file": "/home/p/Git/cashlib/src/Input.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Input.js#L39-L39",
              "path": "src/Input.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "signatureScript",
          "kind": "member",
          "memberof": "Input",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Input",
              "kind": "class"
            },
            {
              "name": "signatureScript",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Input#signatureScript"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The input ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "https://bitcoin.org/en/glossary/sequence-number",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "sequence number"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "end": {
                        "line": 1,
                        "column": 82,
                        "offset": 81
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 82,
                    "offset": 81
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 82,
                "offset": 81
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 44,
                "column": 2
              },
              "end": {
                "line": 44,
                "column": 51
              }
            },
            "file": "/home/p/Git/cashlib/src/Input.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Input.js#L44-L44",
              "path": "src/Input.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "sequence",
          "kind": "member",
          "memberof": "Input",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Input",
              "kind": "class"
            },
            {
              "name": "sequence",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Input#sequence"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns true if this input is the ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "https://bitcoin.org/en/glossary/coinbase-transaction",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "coinbase"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "end": {
                        "line": 1,
                        "column": 104,
                        "offset": 103
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " input",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 104,
                        "offset": 103
                      },
                      "end": {
                        "line": 1,
                        "column": 110,
                        "offset": 109
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 110,
                    "offset": 109
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 110,
                "offset": 109
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 46,
              "column": 2
            },
            "end": {
              "line": 48,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 49,
                "column": 2
              },
              "end": {
                "line": 49,
                "column": 72
              }
            },
            "file": "/home/p/Git/cashlib/src/Input.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Input.js#L49-L49",
              "path": "src/Input.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "isCoinbase",
          "kind": "member",
          "memberof": "Input",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Input",
              "kind": "class"
            },
            {
              "name": "isCoinbase",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Input#isCoinbase"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Input",
        "kind": "class"
      }
    ],
    "namespace": "Input"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Computes a modular square root.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Adapted from ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 33
                },
                "end": {
                  "line": 3,
                  "column": 14,
                  "offset": 46
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "https://eli.thegreenplace.net/2009/03/07/computing-modular-square-roots-in-python",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "\"Computing modular square roots in Python\" by Eli Bendersky"
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 14,
                  "offset": 46
                },
                "end": {
                  "line": 4,
                  "column": 61,
                  "offset": 195
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 33
            },
            "end": {
              "line": 4,
              "column": 61,
              "offset": 195
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 61,
          "offset": 195
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 9,
        "column": 0
      },
      "end": {
        "line": 14,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 80,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/math.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/math.js#L15-L80",
        "path": "src/math.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "a",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "param",
        "name": "p",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "modSqrt",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "modSqrt",
        "kind": "function"
      }
    ],
    "namespace": "modSqrt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This class implements ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "BIP-0039"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "end": {
                  "line": 2,
                  "column": 10,
                  "offset": 101
                },
                "indent": [
                  1
                ]
              }
            },
            {
              "type": "text",
              "value": ", using mnemonic sentences to generate binary seeds",
              "position": {
                "start": {
                  "line": 2,
                  "column": 10,
                  "offset": 101
                },
                "end": {
                  "line": 2,
                  "column": 61,
                  "offset": 152
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 61,
              "offset": 152
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 61,
          "offset": 152
        }
      }
    },
    "tags": [
      {
        "title": "todo",
        "description": "Implement checksum checking",
        "lineNumber": 3
      },
      {
        "title": "todo",
        "description": "Allow varying length phrase",
        "lineNumber": 4
      }
    ],
    "loc": {
      "start": {
        "line": 12,
        "column": 0
      },
      "end": {
        "line": 17,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 48,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/MnemonicSeed.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/MnemonicSeed.js#L18-L48",
        "path": "src/MnemonicSeed.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Data"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [
      {
        "type": "root",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "value": "Implement checksum checking",
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 28,
                    "offset": 27
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 28,
                "offset": 27
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 28,
            "offset": 27
          }
        }
      },
      {
        "type": "root",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "value": "Allow varying length phrase",
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 28,
                    "offset": 27
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 28,
                "offset": 27
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 28,
            "offset": 27
          }
        }
      }
    ],
    "name": "MnemonicSeed",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns a MnemonicSeed from 12 seed words.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 43,
                "offset": 42
              }
            }
          },
          "tags": [
            {
              "title": "todo",
              "description": "Support optional passphrase",
              "lineNumber": 3
            }
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 24,
                "column": 2
              },
              "end": {
                "line": 47,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/MnemonicSeed.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/MnemonicSeed.js#L24-L47",
              "path": "src/MnemonicSeed.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "seedWords",
              "lineNumber": 24,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "MnemonicSeed"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [
            {
              "type": "root",
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "Support optional passphrase",
                      "position": {
                        "start": {
                          "line": 1,
                          "column": 1,
                          "offset": 0
                        },
                        "end": {
                          "line": 1,
                          "column": 28,
                          "offset": 27
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 1,
                      "column": 1,
                      "offset": 0
                    },
                    "end": {
                      "line": 1,
                      "column": 28,
                      "offset": 27
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 28,
                  "offset": 27
                }
              }
            }
          ],
          "name": "fromWords",
          "kind": "function",
          "memberof": "MnemonicSeed",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "MnemonicSeed",
              "kind": "class"
            },
            {
              "name": "fromWords",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "MnemonicSeed.fromWords"
        }
      ]
    },
    "path": [
      {
        "name": "MnemonicSeed",
        "kind": "class"
      }
    ],
    "namespace": "MnemonicSeed"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Prefixes used for a pariticular Bitcoin Network",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 48,
                  "offset": 47
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 48,
              "offset": 47
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 48,
          "offset": 47
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 5,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Network.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Network.js#L3-L5",
        "path": "src/Network.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "publicKeyAddress",
        "lineNumber": 7,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "property",
        "name": "scriptAddress",
        "lineNumber": 8,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "property",
        "name": "privateKeyWif",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "property",
        "name": "extendedKeyVersion",
        "lineNumber": 10,
        "type": {
          "type": "RecordType",
          "fields": [
            {
              "type": "FieldType",
              "key": "public",
              "value": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            },
            {
              "type": "FieldType",
              "key": "private",
              "value": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ]
        }
      },
      {
        "title": "property",
        "name": "extendedKeyVersion.public",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      },
      {
        "title": "property",
        "name": "extendedKeyVersion.private",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "NetworkPrefixes",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "publicKeyAddress",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "scriptAddress",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "privateKeyWif",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "extendedKeyVersion",
          "value": {
            "type": "RecordType",
            "fields": [
              {
                "type": "FieldType",
                "key": "public",
                "value": {
                  "type": "NameExpression",
                  "name": "Uint8Array"
                }
              },
              {
                "type": "FieldType",
                "key": "private",
                "value": {
                  "type": "NameExpression",
                  "name": "Uint8Array"
                }
              }
            ]
          }
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "NetworkPrefixes",
        "kind": "typedef"
      }
    ],
    "namespace": "NetworkPrefixes"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin network, e.g. mainnet, testnet etc",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 45,
                  "offset": 44
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 45,
              "offset": 44
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 45,
          "offset": 44
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 18,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 99,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Network.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Network.js#L19-L99",
        "path": "src/Network.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "prefixes",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "NetworkPrefixes"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Network",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return network label",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 21,
                        "offset": 20
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 21,
                    "offset": 20
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 21,
                "offset": 20
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 30,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 31,
                "column": 2
              },
              "end": {
                "line": 33,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Network.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Network.js#L31-L33",
              "path": "src/Network.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "label",
          "kind": "member",
          "memberof": "Network",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Network",
              "kind": "class"
            },
            {
              "name": "label",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Network#label"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return prefix values for this network",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 38,
                "offset": 37
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 38,
                "column": 2
              },
              "end": {
                "line": 40,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Network.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Network.js#L38-L40",
              "path": "src/Network.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "NetworkPrefixes"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "prefixes",
          "kind": "member",
          "memberof": "Network",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Network",
              "kind": "class"
            },
            {
              "name": "prefixes",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Network#prefixes"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return Network for a given label",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 33,
                "offset": 32
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 45,
                "column": 2
              },
              "end": {
                "line": 98,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Network.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Network.js#L45-L98",
              "path": "src/Network.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "label",
              "lineNumber": 45,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromString",
          "kind": "function",
          "memberof": "Network",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Network",
              "kind": "class"
            },
            {
              "name": "fromString",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Network.fromString"
        }
      ]
    },
    "path": [
      {
        "name": "Network",
        "kind": "class"
      }
    ],
    "namespace": "Network"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin script opcode",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 24,
          "offset": 23
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 7,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/OpCode.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/OpCode.js#L8-L39",
        "path": "src/OpCode.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "mnemonic",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "code",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "OpCodeFunction"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "OpCode",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Value of this opcode",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 21,
                        "offset": 20
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 21,
                    "offset": 20
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 21,
                "offset": 20
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 19,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 22,
                "column": 2
              },
              "end": {
                "line": 24,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/OpCode.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/OpCode.js#L22-L24",
              "path": "src/OpCode.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "value",
          "kind": "member",
          "memberof": "OpCode",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "OpCode",
              "kind": "class"
            },
            {
              "name": "value",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "OpCode#value"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Mnemonic associatd with this opcode",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 36,
                    "offset": 35
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 36,
                "offset": 35
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 29,
                "column": 2
              },
              "end": {
                "line": 31,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/OpCode.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/OpCode.js#L29-L31",
              "path": "src/OpCode.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "mnemonic",
          "kind": "member",
          "memberof": "OpCode",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "OpCode",
              "kind": "class"
            },
            {
              "name": "mnemonic",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "OpCode#mnemonic"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Function that executes when this opcode runs",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 45,
                        "offset": 44
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 45,
                    "offset": 44
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 45,
                "offset": 44
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 36,
                "column": 2
              },
              "end": {
                "line": 38,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/OpCode.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/OpCode.js#L36-L38",
              "path": "src/OpCode.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "OpCodeFunction"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "code",
          "kind": "member",
          "memberof": "OpCode",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "OpCode",
              "kind": "class"
            },
            {
              "name": "code",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "OpCode#code"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "OpCode",
        "kind": "class"
      }
    ],
    "namespace": "OpCode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A transaction output",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 21,
          "offset": 20
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 9,
        "column": 0
      },
      "end": {
        "line": 11,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Output.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Output.js#L12-L93",
        "path": "src/Output.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "pubKeyScript",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Output",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The value in Satoshis for this output",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 38,
                        "offset": 37
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 38,
                    "offset": 37
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 38,
                "offset": 37
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 39,
                "column": 2
              },
              "end": {
                "line": 41,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Output.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Output.js#L39-L41",
              "path": "src/Output.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "value",
          "kind": "member",
          "memberof": "Output",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Output",
              "kind": "class"
            },
            {
              "name": "value",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Output#value"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The public key script (aka 'ScriptPubKey') for this output",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 59,
                    "offset": 58
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 59,
                "offset": 58
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 43,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 46,
                "column": 2
              },
              "end": {
                "line": 48,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Output.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Output.js#L46-L48",
              "path": "src/Output.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "pubKeyScript",
          "kind": "member",
          "memberof": "Output",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Output",
              "kind": "class"
            },
            {
              "name": "pubKeyScript",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Output#pubKeyScript"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The type of output script for this output",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 42,
                        "offset": 41
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 42,
                    "offset": 41
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 42,
                "offset": 41
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 52,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 53,
                "column": 2
              },
              "end": {
                "line": 55,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Output.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Output.js#L53-L55",
              "path": "src/Output.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "OutputScriptType"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "scriptType",
          "kind": "member",
          "memberof": "Output",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Output",
              "kind": "class"
            },
            {
              "name": "scriptType",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Output#scriptType"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return a Bitcoin address for this output",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 41,
                "offset": 40
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 57,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 60,
                "column": 2
              },
              "end": {
                "line": 76,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Output.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Output.js#L60-L76",
              "path": "src/Output.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "network",
              "lineNumber": 60,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "Address"
                  },
                  {
                    "type": "VoidLiteral"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getAddress",
          "kind": "function",
          "memberof": "Output",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Output",
              "kind": "class"
            },
            {
              "name": "getAddress",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Output#getAddress"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Generate and return a new Pay to Public Key Hash output",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 81,
                "column": 2
              },
              "end": {
                "line": 92,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Output.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Output.js#L81-L92",
              "path": "src/Output.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "address",
              "lineNumber": 81,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "value",
              "lineNumber": 81,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Output"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "createP2PKH",
          "kind": "function",
          "memberof": "Output",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Output",
              "kind": "class"
            },
            {
              "name": "createP2PKH",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Output.createP2PKH"
        }
      ]
    },
    "path": [
      {
        "name": "Output",
        "kind": "class"
      }
    ],
    "namespace": "Output"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A simple point",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 15,
                  "offset": 14
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 15,
              "offset": 14
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "For an eliptic curve point see ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 16
                },
                "end": {
                  "line": 3,
                  "column": 32,
                  "offset": 47
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "CurvePoint",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "CurvePoint"
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 32,
                  "offset": 47
                },
                "end": {
                  "line": 3,
                  "column": 50,
                  "offset": 65
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": ".",
              "position": {
                "start": {
                  "line": 3,
                  "column": 50,
                  "offset": 65
                },
                "end": {
                  "line": 3,
                  "column": 51,
                  "offset": 66
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 16
            },
            "end": {
              "line": 3,
              "column": 51,
              "offset": 66
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 3,
          "column": 51,
          "offset": 66
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Point.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Point.js#L10-L29",
        "path": "src/Point.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "x",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "param",
        "name": "y",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Point",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The point's x value",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 20,
                    "offset": 19
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 20,
                "offset": 19
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 22,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 23,
                "column": 2
              },
              "end": {
                "line": 23,
                "column": 37
              }
            },
            "file": "/home/p/Git/cashlib/src/Point.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Point.js#L23-L23",
              "path": "src/Point.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "x",
          "kind": "member",
          "memberof": "Point",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Point",
              "kind": "class"
            },
            {
              "name": "x",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Point#x"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The point's y value",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 20,
                        "offset": 19
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 20,
                    "offset": 19
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 20,
                "offset": 19
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 25,
              "column": 2
            },
            "end": {
              "line": 27,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 28,
                "column": 2
              },
              "end": {
                "line": 28,
                "column": 37
              }
            },
            "file": "/home/p/Git/cashlib/src/Point.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Point.js#L28-L28",
              "path": "src/Point.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "y",
          "kind": "member",
          "memberof": "Point",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Point",
              "kind": "class"
            },
            {
              "name": "y",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Point#y"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Point",
        "kind": "class"
      }
    ],
    "namespace": "Point"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A private key",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 14,
          "offset": 13
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 18,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 180,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/PrivateKey.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L19-L180",
        "path": "src/PrivateKey.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Data"
      }
    ],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "bytes",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      },
      {
        "title": "param",
        "name": "compressPublicKey",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "default": "false"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PrivateKey",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Indicator: should the public key derived from this private key be compressed?",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 78,
                        "offset": 77
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 78,
                    "offset": 77
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Usually automatically to true sometimes if importing a private key in WIF format",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 79
                      },
                      "end": {
                        "line": 3,
                        "column": 81,
                        "offset": 159
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 79
                  },
                  "end": {
                    "line": 3,
                    "column": 81,
                    "offset": 159
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 81,
                "offset": 159
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 2
              },
              "end": {
                "line": 36,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L34-L36",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "compressPublicKey",
          "kind": "member",
          "memberof": "PrivateKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "compressPublicKey",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PrivateKey#compressPublicKey"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns private key as a string in ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "https://en.bitcoin.it/wiki/Wallet_import_format",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Wallet import format"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 36,
                        "offset": 35
                      },
                      "end": {
                        "line": 1,
                        "column": 112,
                        "offset": 111
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 112,
                    "offset": 111
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 112,
                "offset": 111
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 106,
                "column": 2
              },
              "end": {
                "line": 119,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L106-L119",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "network",
              "lineNumber": 106,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toWif",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "toWif",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "PrivateKey#toWif"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns private key encoded in ASN.1/DER format",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 48,
                        "offset": 47
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 48,
                    "offset": 47
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 48,
                "offset": 47
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 124,
                "column": 2
              },
              "end": {
                "line": 143,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L124-L143",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toDer",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "toDer",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "PrivateKey#toDer"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return private key as certificate",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 34,
                "offset": 33
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 148,
                "column": 2
              },
              "end": {
                "line": 156,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L148-L156",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toPem",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "toPem",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "PrivateKey#toPem"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Derive public key from private key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "emphasis",
                    "children": [
                      {
                        "type": "text",
                        "value": "Warning",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 37
                          },
                          "end": {
                            "line": 3,
                            "column": 9,
                            "offset": 44
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 36
                      },
                      "end": {
                        "line": 3,
                        "column": 10,
                        "offset": 45
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " this operation is slow/expensive; cache results where possible.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 10,
                        "offset": 45
                      },
                      "end": {
                        "line": 3,
                        "column": 74,
                        "offset": 109
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 36
                  },
                  "end": {
                    "line": 3,
                    "column": 74,
                    "offset": 109
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 74,
                "offset": 109
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 158,
              "column": 2
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 163,
                "column": 2
              },
              "end": {
                "line": 171,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L163-L171",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "compressed",
              "lineNumber": 163,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "PublicKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toPublicKey",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "toPublicKey",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "PrivateKey#toPublicKey"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Derive point (public key) on secp256k1 curve for the integer\n(private key)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 14,
                        "offset": 74
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 14,
                    "offset": 74
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 14,
                "offset": 74
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 176,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 177,
                "column": 2
              },
              "end": {
                "line": 179,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L177-L179",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toCurvePoint",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "toCurvePoint",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "PrivateKey#toCurvePoint"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return a private key from a hex string",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 41,
                "column": 2
              },
              "end": {
                "line": 44,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L41-L44",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "hex",
              "lineNumber": 41,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "PrivateKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromHex",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "fromHex",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "PrivateKey.fromHex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return a private key object from a string in ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "https://en.bitcoin.it/wiki/Wallet_import_format",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Wallet import format"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "end": {
                        "line": 2,
                        "column": 22,
                        "offset": 121
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 22,
                    "offset": 121
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 22,
                "offset": 121
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 46,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 50,
                "column": 2
              },
              "end": {
                "line": 86,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L50-L86",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "wifKey",
              "lineNumber": 50,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "PrivateKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromWif",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "fromWif",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "PrivateKey.fromWif"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return a private key object from an integer value",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 50,
                "offset": 49
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 91,
                "column": 2
              },
              "end": {
                "line": 101,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PrivateKey.js#L91-L101",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 91,
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "PrivateKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromBigInt",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "fromBigInt",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "PrivateKey.fromBigInt"
        }
      ]
    },
    "path": [
      {
        "name": "PrivateKey",
        "kind": "class"
      }
    ],
    "namespace": "PrivateKey"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin public key",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 21,
          "offset": 20
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 8,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/PublicKey.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PublicKey.js#L11-L42",
        "path": "src/PublicKey.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Data"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PublicKey",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Indicator: this public key is compressed",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 41,
                        "offset": 40
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 41,
                    "offset": 40
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 41,
                "offset": 40
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 14,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 15,
                "column": 2
              },
              "end": {
                "line": 17,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PublicKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PublicKey.js#L15-L17",
              "path": "src/PublicKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "compressed",
          "kind": "member",
          "memberof": "PublicKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PublicKey",
              "kind": "class"
            },
            {
              "name": "compressed",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "PublicKey#compressed"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return the point on the secp256k1 curve associated with this public key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 72,
                        "offset": 71
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 72,
                    "offset": 71
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 72,
                "offset": 71
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 39,
                "column": 2
              },
              "end": {
                "line": 41,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PublicKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PublicKey.js#L39-L41",
              "path": "src/PublicKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toCurvePoint",
          "kind": "function",
          "memberof": "PublicKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PublicKey",
              "kind": "class"
            },
            {
              "name": "toCurvePoint",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "PublicKey#toCurvePoint"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return public key instance from bytes in hex string format",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 59,
                    "offset": 58
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 59,
                "offset": 58
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 19,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 22,
                "column": 2
              },
              "end": {
                "line": 25,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PublicKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PublicKey.js#L22-L25",
              "path": "src/PublicKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "hex",
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromHex",
          "kind": "function",
          "memberof": "PublicKey",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PublicKey",
              "kind": "class"
            },
            {
              "name": "fromHex",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "PublicKey.fromHex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Derive public key from an instance of a private key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 52,
                        "offset": 51
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 52,
                    "offset": 51
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "emphasis",
                    "children": [
                      {
                        "type": "text",
                        "value": "Warning:",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 2,
                            "offset": 54
                          },
                          "end": {
                            "line": 3,
                            "column": 10,
                            "offset": 62
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 53
                      },
                      "end": {
                        "line": 3,
                        "column": 11,
                        "offset": 63
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " This operation is slow/expensive; cache results where possible.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 11,
                        "offset": 63
                      },
                      "end": {
                        "line": 3,
                        "column": 75,
                        "offset": 127
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 53
                  },
                  "end": {
                    "line": 3,
                    "column": 75,
                    "offset": 127
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 75,
                "offset": 127
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 32,
                "column": 2
              },
              "end": {
                "line": 34,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PublicKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/PublicKey.js#L32-L34",
              "path": "src/PublicKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "privateKey",
              "lineNumber": 32,
              "type": {
                "type": "NameExpression",
                "name": "PrivateKey"
              }
            },
            {
              "title": "param",
              "name": "compressed",
              "lineNumber": 32,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromPrivateKey",
          "kind": "function",
          "memberof": "PublicKey",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PublicKey",
              "kind": "class"
            },
            {
              "name": "fromPrivateKey",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "PublicKey.fromPrivateKey"
        }
      ]
    },
    "path": [
      {
        "name": "PublicKey",
        "kind": "class"
      }
    ],
    "namespace": "PublicKey"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The secp256k1 elliptic ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "Curve",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Curve"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 37,
          "offset": 36
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      },
      "file": "/home/p/Git/cashlib/src/secp256k1.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/secp256k1.js#L10-L20",
        "path": "src/secp256k1.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "secp256k1",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "secp256k1",
        "kind": "constant"
      }
    ],
    "namespace": "secp256k1"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class for serializing data",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 27,
          "offset": 26
        }
      }
    },
    "tags": [
      {
        "title": "todo",
        "description": "Documentation under construction",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 141,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Serializer.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Serializer.js#L11-L141",
        "path": "src/Serializer.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [
      {
        "type": "root",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "value": "Documentation under construction",
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 33,
                "offset": 32
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 33,
            "offset": 32
          }
        }
      }
    ],
    "name": "Serializer",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add signed integer of 64 bits",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 30,
                "offset": 29
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 64,
                "column": 2
              },
              "end": {
                "line": 88,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Serializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Serializer.js#L64-L88",
              "path": "src/Serializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 64,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Serializer"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "addInt64",
          "kind": "function",
          "memberof": "Serializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Serializer",
              "kind": "class"
            },
            {
              "name": "addInt64",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Serializer#addInt64"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add bytes",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 10,
                        "offset": 9
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 10,
                    "offset": 9
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 10,
                "offset": 9
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "length"
            }
          ],
          "loc": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 94,
                "column": 2
              },
              "end": {
                "line": 103,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Serializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Serializer.js#L94-L103",
              "path": "src/Serializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "data",
              "lineNumber": 94,
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            },
            {
              "title": "param",
              "name": "length",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Serializer"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "addBytes",
          "kind": "function",
          "memberof": "Serializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Serializer",
              "kind": "class"
            },
            {
              "name": "addBytes",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Serializer#addBytes"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add compactSize unsigned int from current offset",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 49,
                        "offset": 48
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 49,
                    "offset": 48
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 49,
                "offset": 48
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 120,
                "column": 2
              },
              "end": {
                "line": 140,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Serializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Serializer.js#L120-L140",
              "path": "src/Serializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 120,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Serializer"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "addCompactSize",
          "kind": "function",
          "memberof": "Serializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Serializer",
              "kind": "class"
            },
            {
              "name": "addCompactSize",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Serializer#addCompactSize"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Serializer",
        "kind": "class"
      }
    ],
    "namespace": "Serializer"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin transaction",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 22,
          "offset": 21
        }
      }
    },
    "tags": [
      {
        "title": "todo",
        "description": "Documentation under construction",
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 13,
        "column": 0
      },
      "end": {
        "line": 17,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 134,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Transaction.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Transaction.js#L18-L134",
        "path": "src/Transaction.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [
      {
        "type": "root",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "value": "Documentation under construction",
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 33,
                "offset": 32
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 33,
            "offset": 32
          }
        }
      }
    ],
    "name": "Transaction",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Transaction",
        "kind": "class"
      }
    ],
    "namespace": "Transaction"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class for working with Hierarchical Deterministic (HD) Wallets per BIP-0032",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Note: this class does ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 77
                },
                "end": {
                  "line": 3,
                  "column": 23,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "not",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 24,
                      "offset": 100
                    },
                    "end": {
                      "line": 3,
                      "column": 27,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 23,
                  "offset": 99
                },
                "end": {
                  "line": 3,
                  "column": 28,
                  "offset": 104
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " implement BIP-0039 or BIP-0044.  See MnemonicSeed\nand AccountWallet classes respectively for those functionalities.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 28,
                  "offset": 104
                },
                "end": {
                  "line": 4,
                  "column": 66,
                  "offset": 220
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 77
            },
            "end": {
              "line": 4,
              "column": 66,
              "offset": 220
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 66,
          "offset": 220
        }
      }
    },
    "tags": [
      {
        "title": "todo",
        "description": "Documentation under construction",
        "lineNumber": 6
      }
    ],
    "loc": {
      "start": {
        "line": 19,
        "column": 0
      },
      "end": {
        "line": 26,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 27,
          "column": 0
        },
        "end": {
          "line": 338,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet.js#L27-L338",
        "path": "src/Wallet.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "masterPublicKey",
        "lineNumber": 32,
        "type": {
          "type": "NameExpression",
          "name": "ExtendedKey"
        }
      },
      {
        "title": "param",
        "name": "masterPrivateKey",
        "lineNumber": 32,
        "type": {
          "type": "NameExpression",
          "name": "ExtendedKey"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [
      {
        "type": "root",
        "children": [
          {
            "type": "paragraph",
            "children": [
              {
                "type": "text",
                "value": "Documentation under construction",
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 33,
                "offset": 32
              },
              "indent": []
            }
          }
        ],
        "position": {
          "start": {
            "line": 1,
            "column": 1,
            "offset": 0
          },
          "end": {
            "line": 1,
            "column": 33,
            "offset": 32
          }
        }
      }
    ],
    "name": "Wallet",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Wallet",
        "kind": "class"
      }
    ],
    "namespace": "Wallet"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Type of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "DerivationPath",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "DerivationPath"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " - pubic or private key",
              "position": {
                "start": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In the example \"m/44'/0'/0'\", the \"m\" indicates a private\nkey.  A capital \"M\" would represent a public key.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 4,
                  "column": 50,
                  "offset": 162
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 4,
              "column": 50,
              "offset": 162
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 50,
          "offset": 162
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 8,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 54
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L3-L8",
        "path": "src/Wallet/DerivationPath.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "DerivationPathType",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "StringLiteralType",
          "value": "public"
        },
        {
          "type": "StringLiteralType",
          "value": "private"
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DerivationPathType",
        "kind": "typedef"
      }
    ],
    "namespace": "DerivationPathType"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A single level in a ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "DerivationPath",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "DerivationPath"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In the example \"m/44'/0'/0'\", the \"44'\" and each of the\n\"0'\"s represent one level",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 44
                },
                "end": {
                  "line": 4,
                  "column": 26,
                  "offset": 125
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 44
            },
            "end": {
              "line": 4,
              "column": 26,
              "offset": 125
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 26,
          "offset": 125
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 11,
        "column": 0
      },
      "end": {
        "line": 16,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 2
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L11-L16",
        "path": "src/Wallet/DerivationPath.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "depth",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "property",
        "name": "childNumber",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "property",
        "name": "hardened",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "DerivationPathLevel",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "depth",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "childNumber",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "hardened",
          "value": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DerivationPathLevel",
        "kind": "typedef"
      }
    ],
    "namespace": "DerivationPathLevel"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An array of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "DerivationPathLevel",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "DerivationPathLevel"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "s",
              "position": {
                "start": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 25,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 62
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L23-L25",
        "path": "src/Wallet/DerivationPath.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "DerivationPathLevels",
    "kind": "typedef",
    "type": {
      "type": "TypeApplication",
      "expression": {
        "type": "NameExpression",
        "name": "Array"
      },
      "applications": [
        {
          "type": "NameExpression",
          "name": "DerivationPathLevel"
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DerivationPathLevels",
        "kind": "typedef"
      }
    ],
    "namespace": "DerivationPathLevels"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class for handling derivation paths - a method of specifying a private\nor public extended key in a key tree. See:",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 43,
                  "offset": 113
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 43,
              "offset": 113
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "url": "https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "BIP32"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 4,
                          "column": 3,
                          "offset": 117
                        },
                        "end": {
                          "line": 4,
                          "column": 79,
                          "offset": 193
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 4,
                      "column": 3,
                      "offset": 117
                    },
                    "end": {
                      "line": 4,
                      "column": 79,
                      "offset": 193
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 115
                },
                "end": {
                  "line": 4,
                  "column": 79,
                  "offset": 193
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "link",
                      "url": "https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki",
                      "title": null,
                      "jsdoc": true,
                      "children": [
                        {
                          "type": "text",
                          "value": "BIP44"
                        }
                      ],
                      "position": {
                        "start": {
                          "line": 5,
                          "column": 3,
                          "offset": 196
                        },
                        "end": {
                          "line": 5,
                          "column": 79,
                          "offset": 272
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 5,
                      "column": 3,
                      "offset": 196
                    },
                    "end": {
                      "line": 5,
                      "column": 79,
                      "offset": 272
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 5,
                  "column": 1,
                  "offset": 194
                },
                "end": {
                  "line": 5,
                  "column": 79,
                  "offset": 272
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 115
            },
            "end": {
              "line": 5,
              "column": 79,
              "offset": 272
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A derivation path is usually represented in its serialized format, e.g. \"m/44'/0'/0'\" where:",
              "position": {
                "start": {
                  "line": 7,
                  "column": 1,
                  "offset": 274
                },
                "end": {
                  "line": 7,
                  "column": 93,
                  "offset": 366
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 7,
              "column": 1,
              "offset": 274
            },
            "end": {
              "line": 7,
              "column": 93,
              "offset": 366
            },
            "indent": []
          }
        },
        {
          "type": "list",
          "ordered": false,
          "start": null,
          "loose": false,
          "children": [
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "m or M   is a literal where lowercase \"m\" is a private key; uppercase \"M\" a public key",
                      "position": {
                        "start": {
                          "line": 9,
                          "column": 3,
                          "offset": 370
                        },
                        "end": {
                          "line": 9,
                          "column": 89,
                          "offset": 456
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 9,
                      "column": 3,
                      "offset": 370
                    },
                    "end": {
                      "line": 9,
                      "column": 89,
                      "offset": 456
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 9,
                  "column": 1,
                  "offset": 368
                },
                "end": {
                  "line": 9,
                  "column": 89,
                  "offset": 456
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "/        is a literal indicatating a level (zero or more)",
                      "position": {
                        "start": {
                          "line": 10,
                          "column": 3,
                          "offset": 459
                        },
                        "end": {
                          "line": 10,
                          "column": 60,
                          "offset": 516
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 10,
                      "column": 3,
                      "offset": 459
                    },
                    "end": {
                      "line": 10,
                      "column": 60,
                      "offset": 516
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 10,
                  "column": 1,
                  "offset": 457
                },
                "end": {
                  "line": 10,
                  "column": 60,
                  "offset": 516
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "n        is the child key number in the current level",
                      "position": {
                        "start": {
                          "line": 11,
                          "column": 3,
                          "offset": 519
                        },
                        "end": {
                          "line": 11,
                          "column": 56,
                          "offset": 572
                        },
                        "indent": []
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 11,
                      "column": 3,
                      "offset": 519
                    },
                    "end": {
                      "line": 11,
                      "column": 56,
                      "offset": 572
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 11,
                  "column": 1,
                  "offset": 517
                },
                "end": {
                  "line": 11,
                  "column": 56,
                  "offset": 572
                },
                "indent": []
              }
            },
            {
              "type": "listItem",
              "loose": false,
              "checked": null,
              "children": [
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "text",
                      "value": "'        indicates that the suffixed child key is hardened (subscript 'H' is the\n         notation used in the BIP but an apostrophe is the public convention)",
                      "position": {
                        "start": {
                          "line": 12,
                          "column": 3,
                          "offset": 575
                        },
                        "end": {
                          "line": 13,
                          "column": 80,
                          "offset": 735
                        },
                        "indent": [
                          3
                        ]
                      }
                    }
                  ],
                  "position": {
                    "start": {
                      "line": 12,
                      "column": 3,
                      "offset": 575
                    },
                    "end": {
                      "line": 13,
                      "column": 80,
                      "offset": 735
                    },
                    "indent": [
                      3
                    ]
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 12,
                  "column": 1,
                  "offset": 573
                },
                "end": {
                  "line": 13,
                  "column": 80,
                  "offset": 735
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 9,
              "column": 1,
              "offset": 368
            },
            "end": {
              "line": 13,
              "column": 80,
              "offset": 735
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 13,
          "column": 80,
          "offset": 735
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 28,
        "column": 0
      },
      "end": {
        "line": 42,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 146,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L43-L146",
        "path": "src/Wallet/DerivationPath.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "constructorComment": {
      "description": "",
      "tags": [
        {
          "title": "hideconstructor",
          "description": null,
          "lineNumber": 1
        }
      ],
      "loc": {
        "start": {
          "line": 48,
          "column": 2
        },
        "end": {
          "line": 50,
          "column": 5
        }
      },
      "context": {
        "loc": {
          "start": {
            "line": 51,
            "column": 2
          },
          "end": {
            "line": 55,
            "column": 3
          }
        },
        "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
        "sortKey": "!/home/p/Git/cashlib/src/Wallet/DerivationPath.js 00000051",
        "code": "{\n  _type: DerivationPathType\n  _levels: DerivationPathLevels\n  _serialized: string\n\n  /**\n   * @hideconstructor\n   */\n  constructor(type: DerivationPathType, levels: DerivationPathLevels, serialized: string) {\n    this._type = type;\n    this._levels = levels;\n    this._serialized = serialized;\n  }\n\n  /**\n   * Returns a new path but with the type set to 'public'\n   */\n  toPublic(): DerivationPath {\n    return new DerivationPath(\n      'public',\n      this._levels,\n      this._serialized,\n    );\n  }\n\n  /**\n   * Serializes the path into a string in the commonly used format eg \"m/44'/0'/0'\"\n   */\n  toSerialized(): string {\n    return this._serialized;\n  }\n\n  /**\n   * Creates a {@link DerivationPath} instance from a serialized string, eg \"m/44'/0'/0'\"\n   */\n  static fromSerialized(serialized: string): DerivationPath {\n    // Determine type\n    const typeKey = serialized.substr(0, 1);\n    let type: DerivationPathType;\n    switch (typeKey) {\n      case 'm':\n        type = 'private';\n        break;\n      case 'M':\n        type = 'public';\n        break;\n      default:\n        throw new Error('Derivation path must begin with \"m\" or \"M\".');\n    }\n\n    // Decode levels\n    const levels: DerivationPathLevels = serialized\n      .substr(1)\n      .replace(/'/g, \",'\")\n      .split('/')\n      .filter(rec => rec !== '')\n      .map((encodedLevel, index) => {\n        const levelAndHardened = encodedLevel.split(',');\n        const hardened = levelAndHardened[1] !== undefined && levelAndHardened[1] === \"'\";\n        let childNumber = parseInt(levelAndHardened[0], 10);\n        if (hardened) {\n          childNumber += (2 ** 31);\n        }\n        return {\n          depth: index + 1,\n          childNumber,\n          hardened,\n        };\n      });\n\n    return new DerivationPath(type, levels, serialized);\n  }\n\n  /**\n   * The derivation path type\n   */\n  get type(): DerivationPathType { return this._type; }\n\n  /**\n   * The address represented by the path is private\n   */\n  get isPrivate(): boolean { return this._type === 'private'; }\n\n  /**\n   * The address represented by the path is public\n   */\n  get isPublic(): boolean { return this._type === 'public'; }\n\n  /**\n   * Number of levels in this path\n   */\n  get numLevels(): number { return this._levels.length; }\n\n  /**\n   * {@link DerivationPathLevels} for this path\n   */\n  get levels(): DerivationPathLevels {\n    // Return deep copy so our prop is immutable\n    // (We expect returned array to be heavily modified during stack processing)\n    return this._levels\n      .slice()\n      .map(level => Object.assign({}, level));\n  }\n}"
      },
      "augments": [],
      "errors": [],
      "examples": [],
      "params": [],
      "properties": [],
      "returns": [],
      "sees": [],
      "throws": [],
      "todos": [],
      "hideconstructor": true
    },
    "name": "DerivationPath",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns a new path but with the type set to 'public'",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 53,
                    "offset": 52
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 53,
                "offset": 52
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 57,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 60,
                "column": 2
              },
              "end": {
                "line": 66,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L60-L66",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "DerivationPath"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toPublic",
          "kind": "function",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "toPublic",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#toPublic"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Serializes the path into a string in the commonly used format eg \"m/44'/0'/0'\"",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 79,
                        "offset": 78
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 79,
                    "offset": 78
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 79,
                "offset": 78
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 68,
              "column": 2
            },
            "end": {
              "line": 70,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 71,
                "column": 2
              },
              "end": {
                "line": 73,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L71-L73",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toSerialized",
          "kind": "function",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "toSerialized",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#toSerialized"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The derivation path type",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 25,
                        "offset": 24
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 25,
                    "offset": 24
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 25,
                "offset": 24
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 119,
                "column": 2
              },
              "end": {
                "line": 119,
                "column": 55
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L119-L119",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "DerivationPathType"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "type",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "type",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#type"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The address represented by the path is private",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 47,
                        "offset": 46
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 47,
                    "offset": 46
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 47,
                "offset": 46
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 124,
                "column": 2
              },
              "end": {
                "line": 124,
                "column": 63
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L124-L124",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "isPrivate",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "isPrivate",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#isPrivate"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The address represented by the path is public",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 46,
                        "offset": 45
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 46,
                    "offset": 45
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 46,
                "offset": 45
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 126,
              "column": 2
            },
            "end": {
              "line": 128,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 129,
                "column": 2
              },
              "end": {
                "line": 129,
                "column": 61
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L129-L129",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "isPublic",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "isPublic",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#isPublic"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Number of levels in this path",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 30,
                "offset": 29
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 131,
              "column": 2
            },
            "end": {
              "line": 133,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 134,
                "column": 2
              },
              "end": {
                "line": 134,
                "column": 57
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L134-L134",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "numLevels",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "numLevels",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#numLevels"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "link",
                    "url": "DerivationPathLevels",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "DerivationPathLevels"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " for this path",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 43,
                "offset": 42
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 139,
                "column": 2
              },
              "end": {
                "line": 145,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L139-L145",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "DerivationPathLevels"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "levels",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "levels",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#levels"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates a ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "DerivationPath",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "DerivationPath"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " instance from a serialized string, eg \"m/44'/0'/0'\"",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "end": {
                        "line": 1,
                        "column": 85,
                        "offset": 84
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 85,
                    "offset": 84
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 85,
                "offset": 84
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 78,
                "column": 2
              },
              "end": {
                "line": 114,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/DerivationPath.js#L78-L114",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "serialized",
              "lineNumber": 78,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "DerivationPath"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromSerialized",
          "kind": "function",
          "memberof": "DerivationPath",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "fromSerialized",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "DerivationPath.fromSerialized"
        }
      ]
    },
    "path": [
      {
        "name": "DerivationPath",
        "kind": "class"
      }
    ],
    "namespace": "DerivationPath"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Extended private or public key per BIP-0032",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Extended keys are regular keys with an additional 256 bits of entropy (the\nchain code).",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 45
                },
                "end": {
                  "line": 4,
                  "column": 13,
                  "offset": 132
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 45
            },
            "end": {
              "line": 4,
              "column": 13,
              "offset": 132
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 13,
          "offset": 132
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 13,
        "column": 0
      },
      "end": {
        "line": 18,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 146,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L19-L146",
        "path": "src/Wallet/ExtendedKey.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "key",
        "lineNumber": 27,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PrivateKey"
            },
            {
              "type": "NameExpression",
              "name": "PublicKey"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "chainCode",
        "lineNumber": 28,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      },
      {
        "title": "param",
        "name": "depth",
        "lineNumber": 29,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "childNumber",
        "lineNumber": 30,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "parentFingerprint",
        "lineNumber": 31,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "ExtendedKey",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Private or public key for this extended key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 44,
                        "offset": 43
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 44,
                    "offset": 43
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 44,
                "offset": 43
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 45,
                "column": 2
              },
              "end": {
                "line": 45,
                "column": 57
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L45-L45",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "PrivateKey"
                  },
                  {
                    "type": "NameExpression",
                    "name": "PublicKey"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "key",
          "kind": "member",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "key",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#key"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Chaincode for this extended key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 32,
                        "offset": 31
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 32,
                    "offset": 31
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 32,
                "offset": 31
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 50,
                "column": 2
              },
              "end": {
                "line": 50,
                "column": 57
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L50-L50",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "chainCode",
          "kind": "member",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "chainCode",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#chainCode"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Depth / level number of this extended key in key tree",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 54,
                        "offset": 53
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 54,
                    "offset": 53
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 54,
                "offset": 53
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 55,
                "column": 2
              },
              "end": {
                "line": 55,
                "column": 45
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L55-L55",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "depth",
          "kind": "member",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "depth",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#depth"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Child node index at this depth in key tree",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 43,
                "offset": 42
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 57,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 60,
                "column": 2
              },
              "end": {
                "line": 60,
                "column": 57
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L60-L60",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "childNumber",
          "kind": "member",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "childNumber",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#childNumber"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Fingerprint of parent extended key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 35,
                        "offset": 34
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 35,
                    "offset": 34
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 35,
                "offset": 34
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 65,
                "column": 2
              },
              "end": {
                "line": 65,
                "column": 73
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L65-L65",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "parentFingerprint",
          "kind": "member",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "parentFingerprint",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#parentFingerprint"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "PrivateKey",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "PrivateKey"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "end": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " for this extended key.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 27,
                        "offset": 26
                      },
                      "end": {
                        "line": 1,
                        "column": 50,
                        "offset": 49
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 50,
                    "offset": 49
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Throws exception if key is not a PrivateKey.  Use ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 51
                      },
                      "end": {
                        "line": 3,
                        "column": 51,
                        "offset": 101
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "key",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 51,
                        "offset": 101
                      },
                      "end": {
                        "line": 3,
                        "column": 56,
                        "offset": 106
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " attribute instead\nfor generic access without exceptions.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 56,
                        "offset": 106
                      },
                      "end": {
                        "line": 4,
                        "column": 39,
                        "offset": 163
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 51
                  },
                  "end": {
                    "line": 4,
                    "column": 39,
                    "offset": 163
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 39,
                "offset": 163
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 72,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 73,
                "column": 2
              },
              "end": {
                "line": 78,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L73-L78",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "PrivateKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getPrivateKey",
          "kind": "function",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "getPrivateKey",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#getPrivateKey"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "PublicKey",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "PublicKey"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 9,
                        "offset": 8
                      },
                      "end": {
                        "line": 1,
                        "column": 26,
                        "offset": 25
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " for this extended key.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 26,
                        "offset": 25
                      },
                      "end": {
                        "line": 1,
                        "column": 49,
                        "offset": 48
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 49,
                    "offset": 48
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Throws exception if key is not a PublicKey.  Use ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 50
                      },
                      "end": {
                        "line": 3,
                        "column": 50,
                        "offset": 99
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "key",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 50,
                        "offset": 99
                      },
                      "end": {
                        "line": 3,
                        "column": 55,
                        "offset": 104
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " attribute instead\nfor generic access without exceptions.",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 55,
                        "offset": 104
                      },
                      "end": {
                        "line": 4,
                        "column": 39,
                        "offset": 161
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 50
                  },
                  "end": {
                    "line": 4,
                    "column": 39,
                    "offset": 161
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 4,
                "column": 39,
                "offset": 161
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 86,
                "column": 2
              },
              "end": {
                "line": 91,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L86-L91",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "PublicKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getPublicKey",
          "kind": "function",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "getPublicKey",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#getPublicKey"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return signature of extended key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The signature is a hex string with enough data to uniquiely id the\nextended key without collision. It is effectively the serialized\nextended key (refer BIP-0032#Serialization_format) but devoid of\nthe network prefix and is not hashed",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 34
                      },
                      "end": {
                        "line": 6,
                        "column": 37,
                        "offset": 267
                      },
                      "indent": [
                        1,
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 34
                  },
                  "end": {
                    "line": 6,
                    "column": 37,
                    "offset": 267
                  },
                  "indent": [
                    1,
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 6,
                "column": 37,
                "offset": 267
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 93,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 101,
                "column": 2
              },
              "end": {
                "line": 116,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L101-L116",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getSignature",
          "kind": "function",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "getSignature",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#getSignature"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns extended key as a string in serialized format.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 55,
                        "offset": 54
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 55,
                    "offset": 54
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Serialized format is the extended key and a checksum in base58\nencoded format.  These serialized keys are recognizable by their\nfour digit prefix (eg. ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 56
                      },
                      "end": {
                        "line": 5,
                        "column": 24,
                        "offset": 207
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "xpub",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 24,
                        "offset": 207
                      },
                      "end": {
                        "line": 5,
                        "column": 30,
                        "offset": 213
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " or ",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 30,
                        "offset": 213
                      },
                      "end": {
                        "line": 5,
                        "column": 34,
                        "offset": 217
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "inlineCode",
                    "value": "xpriv",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 34,
                        "offset": 217
                      },
                      "end": {
                        "line": 5,
                        "column": 41,
                        "offset": 224
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " for mainnet keys).",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 41,
                        "offset": 224
                      },
                      "end": {
                        "line": 5,
                        "column": 60,
                        "offset": 243
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 56
                  },
                  "end": {
                    "line": 5,
                    "column": 60,
                    "offset": 243
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 5,
                "column": 60,
                "offset": 243
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 125,
                "column": 2
              },
              "end": {
                "line": 145,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/0c70d2ecf64f403c44975f561d8da314a827cf2c/src/Wallet/ExtendedKey.js#L125-L145",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "network",
              "lineNumber": 125,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toSerialized",
          "kind": "function",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "toSerialized",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#toSerialized"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ExtendedKey",
        "kind": "class"
      }
    ],
    "namespace": "ExtendedKey"
  }
]