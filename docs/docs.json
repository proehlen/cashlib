[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Type of wallet address for an ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "AccountWallet",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "AccountWallet"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "end": {
                  "line": 1,
                  "column": 52,
                  "offset": 51
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 52,
              "offset": 51
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Internal addresses are used by the wallet implementation to recieve\nchange and are not ordinarily shared. External addresses are for\nreceiving payments and are shared with the sender.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 53
                },
                "end": {
                  "line": 5,
                  "column": 51,
                  "offset": 236
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 53
            },
            "end": {
              "line": 5,
              "column": 51,
              "offset": 236
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 5,
          "column": 51,
          "offset": 236
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 18,
        "column": 0
      },
      "end": {
        "line": 24,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 63
        }
      },
      "file": "/home/p/Git/cashlib/src/AccountWallet.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/AccountWallet.js#L18-L24",
        "path": "src/AccountWallet.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "AccountWalletAddressType",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "StringLiteralType",
          "value": "internal"
        },
        {
          "type": "StringLiteralType",
          "value": "external"
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "AccountWalletAddressType",
        "kind": "typedef"
      }
    ],
    "namespace": "AccountWalletAddressType"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Wallet for a single account derived from a BIP-0044 path",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 57,
                  "offset": 56
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 57,
              "offset": 56
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This class internally creates sub-wallets for and facilitates issuing of\nexternal (public receiving) and internal (change) addresses.  It is up to\nthe client implementation to determine whether addresses have been\npreviously used (ie by scanning the blockchain) and calling setUsedAddressIndex()\naccordingly.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 58
                },
                "end": {
                  "line": 7,
                  "column": 13,
                  "offset": 366
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 58
            },
            "end": {
              "line": 7,
              "column": 13,
              "offset": 366
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 7,
          "column": 13,
          "offset": 366
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 27,
        "column": 0
      },
      "end": {
        "line": 35,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/AccountWallet.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/AccountWallet.js#L36-L131",
        "path": "src/AccountWallet.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "constructorComment": {
      "description": "",
      "tags": [
        {
          "title": "hideconstructor",
          "description": null,
          "lineNumber": 1
        }
      ],
      "loc": {
        "start": {
          "line": 42,
          "column": 2
        },
        "end": {
          "line": 44,
          "column": 5
        }
      },
      "context": {
        "loc": {
          "start": {
            "line": 45,
            "column": 2
          },
          "end": {
            "line": 50,
            "column": 3
          }
        },
        "file": "/home/p/Git/cashlib/src/AccountWallet.js",
        "sortKey": "!/home/p/Git/cashlib/src/AccountWallet.js 00000045",
        "code": "{\n  _internalWallet: Wallet\n  _externalWallet: Wallet\n  _internalUsedIndex: number // Used change address index\n  _externalUsedIndex: number // Used external address index\n\n  /**\n   * @hideconstructor\n   */\n  constructor(externalWallet: Wallet, internalWallet: Wallet) {\n    this._externalWallet = externalWallet;\n    this._externalUsedIndex = -1;\n    this._internalWallet = internalWallet;\n    this._internalUsedIndex = -1;\n  }\n\n  /**\n   * Return highest used address index for nominated type\n   */\n  getUsedAddressIndex(type: AccountWalletAddressType): number {\n    return (type === 'external')\n      ? this._externalUsedIndex\n      : this._internalUsedIndex;\n  }\n\n  /**\n   * Update the highest used address index for the nominated type\n   */\n  setUsedAddressIndex(type: AccountWalletAddressType, addressIndex: number): void {\n    if (type === 'external') {\n      this._externalUsedIndex = addressIndex;\n    } else {\n      this._internalUsedIndex = addressIndex;\n    }\n  }\n\n  /**\n   * Returns next/first unused external shareable public key as an address\n   *\n   * This address can be shared publicly to receive payments\n   */\n  nextExternalAddress(network: Network): Address {\n    this._externalUsedIndex += 1;\n    const path = DerivationPath.fromSerialized(`M${this._externalUsedIndex}`);\n    const publicKey = this._externalWallet.getKey(path).getPublicKey();\n    return Address.fromPublicKey(publicKey, network);\n  }\n\n  /**\n   * Returns next/first unused internal change public key as an address\n   *\n   * This address should be used by wallet software to receive change\n   */\n  nextInternalAddress(network: Network): Address {\n    this._internalUsedIndex += 1;\n    const path = DerivationPath.fromSerialized(`M/${this._internalUsedIndex}`);\n    const publicKey = this._internalWallet.getKey(path).getPublicKey();\n    return Address.fromPublicKey(publicKey, network);\n  }\n\n  /**\n   * Create new AccountWallet instance using a seed and BIP44 derivation path\n   */\n  static fromSeed(seed: Data, accountPath: DerivationPath): AccountWallet {\n    // Validate derivation path (require BIP44 format)\n    const exampleText = \"(e.g.  m44'0'0')\";\n    assert(accountPath.numLevels === 3, `Expected a 3 level derivation path ${exampleText}`);\n    assert(accountPath.isPrivate, \"Expected derivation path to begin with 'm' (private)\");\n    const firstIndex = accountPath.levels[0].childNumber;\n    assert(firstIndex === purposeBip44, `Expected first derivation path level to be 44 ${exampleText}`);\n    const secondIndex = accountPath.levels[1].childNumber;\n    assert(coinTypes.indexOf(secondIndex) > -1, `Unrecognized coin type (${secondIndex})`);\n\n    // Generate master wallet\n    const masterWallet = Wallet.fromSeed(seed);\n\n    // Get keys for and create account wallet\n    const accountPrivateKey = masterWallet.getKey(accountPath);\n    const accountPublicKey = masterWallet.getKey(accountPath.toPublic());\n    const accountWallet = new Wallet(accountPublicKey, accountPrivateKey);\n\n    // Get keys for and create external / receiving wallet\n    const externalPath = DerivationPath.fromSerialized('m/0');\n    const externalPrivateKey = accountWallet.getKey(externalPath);\n    const externalPublicKey = accountWallet.getKey(externalPath.toPublic());\n    const externalWallet = new Wallet(externalPublicKey, externalPrivateKey);\n\n    // Get keys for and create internal / change wallet\n    const internalPath = DerivationPath.fromSerialized('m/1');\n    const internalPrivateKey = accountWallet.getKey(internalPath);\n    const internalPublicKey = accountWallet.getKey(internalPath.toPublic());\n    const internalWallet = new Wallet(internalPublicKey, internalPrivateKey);\n\n    return new AccountWallet(externalWallet, internalWallet);\n  }\n}"
      },
      "augments": [],
      "errors": [],
      "examples": [],
      "params": [],
      "properties": [],
      "returns": [],
      "sees": [],
      "throws": [],
      "todos": [],
      "hideconstructor": true
    },
    "name": "AccountWallet",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return highest used address index for nominated type",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 53,
                    "offset": 52
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 53,
                "offset": 52
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 55,
                "column": 2
              },
              "end": {
                "line": 59,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/AccountWallet.js#L55-L59",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "type",
              "lineNumber": 55,
              "type": {
                "type": "NameExpression",
                "name": "AccountWalletAddressType"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getUsedAddressIndex",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "getUsedAddressIndex",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "AccountWallet#getUsedAddressIndex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update the highest used address index for the nominated type",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 61,
                        "offset": 60
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 61,
                    "offset": 60
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 61,
                "offset": 60
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 61,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 64,
                "column": 2
              },
              "end": {
                "line": 70,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/AccountWallet.js#L64-L70",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "type",
              "lineNumber": 64,
              "type": {
                "type": "NameExpression",
                "name": "AccountWalletAddressType"
              }
            },
            {
              "title": "param",
              "name": "addressIndex",
              "lineNumber": 64,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "VoidLiteral"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "setUsedAddressIndex",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "setUsedAddressIndex",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "AccountWallet#setUsedAddressIndex"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns next/first unused external shareable public key as an address",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 70,
                        "offset": 69
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 70,
                    "offset": 69
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This address can be shared publicly to receive payments",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 71
                      },
                      "end": {
                        "line": 3,
                        "column": 56,
                        "offset": 126
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 71
                  },
                  "end": {
                    "line": 3,
                    "column": 56,
                    "offset": 126
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 56,
                "offset": 126
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 72,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 77,
                "column": 2
              },
              "end": {
                "line": 82,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/AccountWallet.js#L77-L82",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "network",
              "lineNumber": 77,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Address"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "nextExternalAddress",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "nextExternalAddress",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "AccountWallet#nextExternalAddress"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns next/first unused internal change public key as an address",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 67,
                        "offset": 66
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 67,
                    "offset": 66
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This address should be used by wallet software to receive change",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 68
                      },
                      "end": {
                        "line": 3,
                        "column": 65,
                        "offset": 132
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 68
                  },
                  "end": {
                    "line": 3,
                    "column": 65,
                    "offset": 132
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 65,
                "offset": 132
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 89,
                "column": 2
              },
              "end": {
                "line": 94,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/AccountWallet.js#L89-L94",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "network",
              "lineNumber": 89,
              "type": {
                "type": "NameExpression",
                "name": "Network"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Address"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "nextInternalAddress",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "nextInternalAddress",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "AccountWallet#nextInternalAddress"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Create new AccountWallet instance using a seed and BIP44 derivation path",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 73,
                        "offset": 72
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 73,
                    "offset": 72
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 73,
                "offset": 72
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 99,
                "column": 2
              },
              "end": {
                "line": 130,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/AccountWallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/AccountWallet.js#L99-L130",
              "path": "src/AccountWallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "seed",
              "lineNumber": 99,
              "type": {
                "type": "NameExpression",
                "name": "Data"
              }
            },
            {
              "title": "param",
              "name": "accountPath",
              "lineNumber": 99,
              "type": {
                "type": "NameExpression",
                "name": "DerivationPath"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "AccountWallet"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromSeed",
          "kind": "function",
          "memberof": "AccountWallet",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "AccountWallet",
              "kind": "class"
            },
            {
              "name": "fromSeed",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "AccountWallet.fromSeed"
        }
      ]
    },
    "path": [
      {
        "name": "AccountWallet",
        "kind": "class"
      }
    ],
    "namespace": "AccountWallet"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin address",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 18,
          "offset": 17
        }
      }
    },
    "tags": [
      {
        "title": "hideconstructor",
        "description": null,
        "lineNumber": 3
      }
    ],
    "loc": {
      "start": {
        "line": 10,
        "column": 0
      },
      "end": {
        "line": 14,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 51,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Address.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Address.js#L15-L51",
        "path": "src/Address.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Data"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "hideconstructor": true,
    "name": "Address",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Address",
        "kind": "class"
      }
    ],
    "namespace": "Address"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Simple generic cache with automatic pruning based on maxSize and entry access age",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 82,
                  "offset": 81
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 82,
              "offset": 81
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 82,
          "offset": 81
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 5,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 64,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Cache.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Cache.js#L6-L64",
        "path": "src/Cache.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "maxSize",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "constructorComment": {
      "description": "",
      "tags": [
        {
          "title": "constructor",
          "description": null,
          "lineNumber": 1,
          "name": null
        }
      ],
      "loc": {
        "start": {
          "line": 10,
          "column": 2
        },
        "end": {
          "line": 12,
          "column": 5
        }
      },
      "context": {
        "loc": {
          "start": {
            "line": 13,
            "column": 2
          },
          "end": {
            "line": 16,
            "column": 3
          }
        },
        "file": "/home/p/Git/cashlib/src/Cache.js",
        "sortKey": "!/home/p/Git/cashlib/src/Cache.js 00000013",
        "code": "{\n  _maxSize: number\n  _data: Map<S, V>\n\n  /**\n   * @constructor\n   */\n  constructor(maxSize: number) {\n    this._maxSize = maxSize;\n    this._data = new Map();\n  }\n\n  /**\n   * Size (number of entries) in cache\n   */\n  get size() { return this._data.size; }\n\n  /**\n   * Adds a value to the Cache\n   */\n  add(signature: S, value: V) {\n    // Use .get() to return value and update cache entry age\n    const existing = this.get(signature);\n    if (!existing) {\n      // Add new value to cache\n      this._data.set(signature, value);\n\n      // Prune older entries if necessary\n      this._prune();\n    }\n  }\n\n  /**\n   * Returns a value from the cache or 'undefined' not found\n   */\n  get(signature: S): V | void {\n    const value: V | void = this._data.get(signature);\n    if (value) {\n      // Delete and readd cache entry to push it to the top/end of\n      // map so it won't be pruned\n      this._data.delete(signature);\n      this._data.set(signature, value);\n    }\n    return value;\n  }\n\n  /**\n   * Prunes the cache of older entries to bring cache back down to maxSSize\n   * @private\n   */\n  _prune() {\n    const numToDelete = this._data.size - this._maxSize;\n    for (let i = 0; i < numToDelete; i++) {\n      // $flow-disable-line flow is confused here\n      const entry: [S, V] = this._data.entries().next().value;\n      this._data.delete(entry[0]);\n    }\n  }\n}"
      },
      "augments": [],
      "errors": [],
      "examples": [],
      "params": [],
      "properties": [],
      "returns": [],
      "sees": [],
      "throws": [],
      "todos": [],
      "kind": "class"
    },
    "name": "Cache",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Size (number of entries) in cache",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 34,
                        "offset": 33
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 34,
                    "offset": 33
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 34,
                "offset": 33
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 20,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 21,
                "column": 2
              },
              "end": {
                "line": 21,
                "column": 40
              }
            },
            "file": "/home/p/Git/cashlib/src/Cache.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Cache.js#L21-L21",
              "path": "src/Cache.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "size",
          "kind": "member",
          "memberof": "Cache",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cache",
              "kind": "class"
            },
            {
              "name": "size",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "Cache#size"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a value to the Cache",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 26,
                        "offset": 25
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 26,
                    "offset": 25
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 26,
                "offset": 25
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 25,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 26,
                "column": 2
              },
              "end": {
                "line": 36,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Cache.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Cache.js#L26-L36",
              "path": "src/Cache.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "signature",
              "lineNumber": 26,
              "type": {
                "type": "NameExpression",
                "name": "S"
              }
            },
            {
              "title": "param",
              "name": "value",
              "lineNumber": 26,
              "type": {
                "type": "NameExpression",
                "name": "V"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "add",
          "kind": "function",
          "memberof": "Cache",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cache",
              "kind": "class"
            },
            {
              "name": "add",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cache#add"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns a value from the cache or 'undefined' not found",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 41,
                "column": 2
              },
              "end": {
                "line": 50,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Cache.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Cache.js#L41-L50",
              "path": "src/Cache.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "signature",
              "lineNumber": 41,
              "type": {
                "type": "NameExpression",
                "name": "S"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "V"
                  },
                  {
                    "type": "VoidLiteral"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "get",
          "kind": "function",
          "memberof": "Cache",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Cache",
              "kind": "class"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Cache#get"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Cache",
        "kind": "class"
      }
    ],
    "namespace": "Cache"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The parameters that, when taken together, define the elliptic curve",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 68,
                  "offset": 67
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 68,
              "offset": 67
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 68,
          "offset": 67
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 7,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Curve.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Curve.js#L5-L7",
        "path": "src/Curve.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "field",
        "lineNumber": 9,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "property",
        "name": "basePoint",
        "lineNumber": 10,
        "type": {
          "type": "NameExpression",
          "name": "Point"
        }
      },
      {
        "title": "property",
        "name": "order",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "property",
        "name": "elementA",
        "lineNumber": 12,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "property",
        "name": "elementB",
        "lineNumber": 13,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "property",
        "name": "cofactor",
        "lineNumber": 14,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CurveDomainParameters",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "field",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        },
        {
          "type": "FieldType",
          "key": "basePoint",
          "value": {
            "type": "NameExpression",
            "name": "Point"
          }
        },
        {
          "type": "FieldType",
          "key": "order",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        },
        {
          "type": "FieldType",
          "key": "elementA",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        },
        {
          "type": "FieldType",
          "key": "elementB",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        },
        {
          "type": "FieldType",
          "key": "cofactor",
          "value": {
            "type": "NameExpression",
            "name": "BigInt"
          }
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "CurveDomainParameters",
        "kind": "typedef"
      }
    ],
    "namespace": "CurveDomainParameters"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class representing an elliptic curve.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 38,
                  "offset": 37
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 38,
              "offset": 37
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 38,
          "offset": 37
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 17,
        "column": 0
      },
      "end": {
        "line": 19,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Curve.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Curve.js#L20-L43",
        "path": "src/Curve.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "domainParameters",
        "lineNumber": 28,
        "type": {
          "type": "NameExpression",
          "name": "CurveDomainParameters"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Curve",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Curve",
        "kind": "class"
      }
    ],
    "namespace": "Curve"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Point on Eliptic Curve",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 23,
                  "offset": 22
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 23,
              "offset": 22
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Note: methods add, double and multiply relate to elliptic curve point\nmultiplication and not regular math operations.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 24
                },
                "end": {
                  "line": 4,
                  "column": 48,
                  "offset": 141
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 24
            },
            "end": {
              "line": 4,
              "column": 48,
              "offset": 141
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Note: since we presently only use secp256k1, some simplifications are possible\nin elliptic curve point multiplication.  If other curves are implemented,\nthese may not apply and this class would need to be updated.",
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 143
                },
                "end": {
                  "line": 8,
                  "column": 61,
                  "offset": 356
                },
                "indent": [
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 143
            },
            "end": {
              "line": 8,
              "column": 61,
              "offset": 356
            },
            "indent": [
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 8,
          "column": 61,
          "offset": 356
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 10,
        "column": 0
      },
      "end": {
        "line": 19,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 20,
          "column": 0
        },
        "end": {
          "line": 164,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/CurvePoint.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/CurvePoint.js#L20-L164",
        "path": "src/CurvePoint.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Point"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "CurvePoint",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Use elliptic curve point multiplication to derive point (public key) on\nsecp256k1 curve for the given integer (private key)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 52,
                        "offset": 123
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 52,
                    "offset": 123
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 52,
                "offset": 123
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 120,
                "column": 2
              },
              "end": {
                "line": 123,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/CurvePoint.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/CurvePoint.js#L120-L123",
              "path": "src/CurvePoint.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 120,
              "type": {
                "type": "NameExpression",
                "name": "BigInt"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromBigInt",
          "kind": "function",
          "memberof": "CurvePoint",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "CurvePoint",
              "kind": "class"
            },
            {
              "name": "fromBigInt",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "CurvePoint.fromBigInt"
        }
      ]
    },
    "path": [
      {
        "name": "CurvePoint",
        "kind": "class"
      }
    ],
    "namespace": "CurvePoint"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Base/wrapper class for objects that primarily consist or derive from data in bytes",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 83,
                  "offset": 82
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 83,
              "offset": 82
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 83,
          "offset": 82
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 8,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Data.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Data.js#L9-L58",
        "path": "src/Data.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "bytes",
        "lineNumber": 12,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Uint8Array"
            },
            {
              "type": "NameExpression",
              "name": "Buffer"
            },
            {
              "type": "NameExpression",
              "name": "BigInt"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Data",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Note: Don't know how to make 'this' polymorphic in flow;\nOverride (replicate) in child classes to avoid type warnings.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 62,
                        "offset": 118
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 62,
                    "offset": 118
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 62,
                "offset": 118
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 50,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 54,
                "column": 2
              },
              "end": {
                "line": 57,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Data.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Data.js#L54-L57",
              "path": "src/Data.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "hex",
              "lineNumber": 54,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromHex",
          "kind": "function",
          "memberof": "Data",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Data",
              "kind": "class"
            },
            {
              "name": "fromHex",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Data.fromHex"
        }
      ]
    },
    "path": [
      {
        "name": "Data",
        "kind": "class"
      }
    ],
    "namespace": "Data"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class for deserializing data",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 29,
                  "offset": 28
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 29,
              "offset": 28
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 29,
          "offset": 28
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 4,
        "column": 0
      },
      "end": {
        "line": 6,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 155,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Deserializer.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Deserializer.js#L7-L155",
        "path": "src/Deserializer.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "data",
        "lineNumber": 11,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "Uint8Array"
            },
            {
              "type": "NameExpression",
              "name": "string"
            }
          ]
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Deserializer",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get signed integer of 64 bits",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 30,
                "offset": 29
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 47,
                "column": 2
              },
              "end": {
                "line": 73,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Deserializer.js#L47-L73",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getInt64",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getInt64",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getInt64"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get unsigned signed integer of 64 bits",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 39,
                        "offset": 38
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 39,
                    "offset": 38
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 39,
                "offset": 38
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 77,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 78,
                "column": 2
              },
              "end": {
                "line": 89,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Deserializer.js#L78-L89",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getUInt64",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getUInt64",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getUInt64"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get raw bytes",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 14,
                        "offset": 13
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 14,
                    "offset": 13
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 14,
                "offset": 13
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": null,
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "length"
            }
          ],
          "loc": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 96,
                "column": 2
              },
              "end": {
                "line": 104,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Deserializer.js#L96-L104",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "length",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getBytes",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getBytes",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getBytes"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get compactSize unsigned int from current offset",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 49,
                        "offset": 48
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 49,
                    "offset": 48
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "See ",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 50
                      },
                      "end": {
                        "line": 3,
                        "column": 5,
                        "offset": 54
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "https://bitcoin.org/en/developer-reference#compactsize-unsigned-integers",
                    "children": [
                      {
                        "type": "text",
                        "value": "https://bitcoin.org/en/developer-reference#compactsize-unsigned-integers",
                        "position": {
                          "start": {
                            "line": 3,
                            "column": 5,
                            "offset": 54
                          },
                          "end": {
                            "line": 3,
                            "column": 77,
                            "offset": 126
                          },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 5,
                        "offset": 54
                      },
                      "end": {
                        "line": 3,
                        "column": 77,
                        "offset": 126
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 50
                  },
                  "end": {
                    "line": 3,
                    "column": 77,
                    "offset": 126
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 77,
                "offset": 126
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 128,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 133,
                "column": 2
              },
              "end": {
                "line": 154,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Deserializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Deserializer.js#L133-L154",
              "path": "src/Deserializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getCompactSize",
          "kind": "function",
          "memberof": "Deserializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Deserializer",
              "kind": "class"
            },
            {
              "name": "getCompactSize",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Deserializer#getCompactSize"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Deserializer",
        "kind": "class"
      }
    ],
    "namespace": "Deserializer"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A transaction input",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 20,
                  "offset": 19
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 20,
              "offset": 19
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 20,
          "offset": 19
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 5,
        "column": 0
      },
      "end": {
        "line": 7,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 31,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Input.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Input.js#L8-L31",
        "path": "src/Input.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "transactionId",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "outputIndex",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "signatureScript",
        "lineNumber": 17,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      },
      {
        "title": "param",
        "name": "sequence",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "number"
        },
        "default": "DEFAULT_SEQUENCE"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Input",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Input",
        "kind": "class"
      }
    ],
    "namespace": "Input"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Computes a modular square root.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 32,
                  "offset": 31
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 32,
              "offset": 31
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 32,
          "offset": 31
        }
      }
    },
    "tags": [
      {
        "title": "exports",
        "description": "Adapted from \"Computing modular square roots in Python\" by Eli Bendersky\nhttps://eli.thegreenplace.net/2009/03/07/computing-modular-square-roots-in-python",
        "lineNumber": 2
      }
    ],
    "loc": {
      "start": {
        "line": 9,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/math.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/math.js#L16-L81",
        "path": "src/math.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "a",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      },
      {
        "title": "param",
        "name": "p",
        "lineNumber": 16,
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "BigInt"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "modSqrt",
    "kind": "function",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "modSqrt",
        "kind": "function"
      }
    ],
    "namespace": "modSqrt"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "This class implements BIP-0039 - using mnemonic sentences to generate binary\nseeds",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 6,
                  "offset": 82
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 6,
              "offset": 82
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 2,
          "column": 6,
          "offset": 82
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 12,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 41,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/MnemonicSeed.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/MnemonicSeed.js#L16-L41",
        "path": "src/MnemonicSeed.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Data"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "MnemonicSeed",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "MnemonicSeed",
        "kind": "class"
      }
    ],
    "namespace": "MnemonicSeed"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin network",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 18,
                  "offset": 17
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 18,
              "offset": 17
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 18,
          "offset": 17
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 13,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 87,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Network.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Network.js#L16-L87",
        "path": "src/Network.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "label",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "prefixes",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "NetworkPrefixes"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Network",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Network",
        "kind": "class"
      }
    ],
    "namespace": "Network"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin script opcode",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 24,
              "offset": 23
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 24,
          "offset": 23
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 5,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/OpCode.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/OpCode.js#L6-L28",
        "path": "src/OpCode.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "mnemonic",
        "lineNumber": 11,
        "type": {
          "type": "NameExpression",
          "name": "string"
        }
      },
      {
        "title": "param",
        "name": "code",
        "lineNumber": 11,
        "type": {
          "type": "FunctionType",
          "params": [],
          "result": {
            "type": "VoidLiteral"
          }
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "OpCode",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "OpCode",
        "kind": "class"
      }
    ],
    "namespace": "OpCode"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A transaction output",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 21,
              "offset": 20
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 21,
          "offset": 20
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 79,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Output.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Output.js#L10-L79",
        "path": "src/Output.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "value",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "pubKeyScript",
        "lineNumber": 15,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Output",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Generate and return a new Pay to Public Key Hash output",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 56,
                        "offset": 55
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 56,
                    "offset": 55
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 56,
                "offset": 55
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 67,
                "column": 2
              },
              "end": {
                "line": 78,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Output.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Output.js#L67-L78",
              "path": "src/Output.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "address",
              "lineNumber": 67,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "value",
              "lineNumber": 67,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Output"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "createP2PKH",
          "kind": "function",
          "memberof": "Output",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Output",
              "kind": "class"
            },
            {
              "name": "createP2PKH",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Output.createP2PKH"
        }
      ]
    },
    "path": [
      {
        "name": "Output",
        "kind": "class"
      }
    ],
    "namespace": "Output"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A private key",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 14,
                  "offset": 13
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 14,
              "offset": 13
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 14,
          "offset": 13
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 16,
        "column": 0
      },
      "end": {
        "line": 18,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 154,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/PrivateKey.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/PrivateKey.js#L19-L154",
        "path": "src/PrivateKey.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Data"
      }
    ],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "bytes",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      },
      {
        "title": "param",
        "name": "compressPublicKey",
        "lineNumber": 23,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        },
        "default": "false"
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PrivateKey",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns private key encoded in ASN.1/DER format",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 48,
                        "offset": 47
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 48,
                    "offset": 47
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 48,
                "offset": 47
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 106,
                "column": 2
              },
              "end": {
                "line": 125,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/PrivateKey.js#L106-L125",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toDer",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "toDer",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "PrivateKey#toDer"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Derive point (public key) on secp256k1 curve for the integer\n(private key)",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 14,
                        "offset": 74
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 14,
                    "offset": 74
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 14,
                "offset": 74
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 151,
                "column": 2
              },
              "end": {
                "line": 153,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/PrivateKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/PrivateKey.js#L151-L153",
              "path": "src/PrivateKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "CurvePoint"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toCurvePoint",
          "kind": "function",
          "memberof": "PrivateKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "PrivateKey",
              "kind": "class"
            },
            {
              "name": "toCurvePoint",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "PrivateKey#toCurvePoint"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PrivateKey",
        "kind": "class"
      }
    ],
    "namespace": "PrivateKey"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A public key",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 13,
              "offset": 12
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 13,
          "offset": 12
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 8,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/PublicKey.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/PublicKey.js#L11-L28",
        "path": "src/PublicKey.js"
      }
    },
    "augments": [
      {
        "title": "augments",
        "name": "Data"
      }
    ],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "PublicKey",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "PublicKey",
        "kind": "class"
      }
    ],
    "namespace": "PublicKey"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The secp256k1 elliptic ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "Curve",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Curve"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 24,
                  "offset": 23
                },
                "end": {
                  "line": 1,
                  "column": 37,
                  "offset": 36
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 37,
              "offset": 36
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 37,
          "offset": 36
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 7,
        "column": 0
      },
      "end": {
        "line": 9,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      },
      "file": "/home/p/Git/cashlib/src/secp256k1.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/secp256k1.js#L10-L20",
        "path": "src/secp256k1.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "seckp256k1",
    "kind": "constant",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "seckp256k1",
        "kind": "constant"
      }
    ],
    "namespace": "seckp256k1"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class for serializing data",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 27,
                  "offset": 26
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 27,
              "offset": 26
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 27,
          "offset": 26
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 8,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Serializer.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Serializer.js#L9-L139",
        "path": "src/Serializer.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Serializer",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add signed integer of 64 bits",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 30,
                "offset": 29
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 62,
                "column": 2
              },
              "end": {
                "line": 86,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Serializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Serializer.js#L62-L86",
              "path": "src/Serializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 62,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Serializer"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "addInt64",
          "kind": "function",
          "memberof": "Serializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Serializer",
              "kind": "class"
            },
            {
              "name": "addInt64",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Serializer#addInt64"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add bytes",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 10,
                        "offset": 9
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 10,
                    "offset": 9
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 10,
                "offset": 9
              }
            }
          },
          "tags": [
            {
              "title": "param",
              "description": null,
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "length"
            }
          ],
          "loc": {
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 92,
                "column": 2
              },
              "end": {
                "line": 101,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Serializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Serializer.js#L92-L101",
              "path": "src/Serializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "data",
              "lineNumber": 92,
              "type": {
                "type": "NameExpression",
                "name": "Uint8Array"
              }
            },
            {
              "title": "param",
              "name": "length",
              "lineNumber": 2,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Serializer"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "addBytes",
          "kind": "function",
          "memberof": "Serializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Serializer",
              "kind": "class"
            },
            {
              "name": "addBytes",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Serializer#addBytes"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add compactSize unsigned int from current offset",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 49,
                        "offset": 48
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 49,
                    "offset": 48
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 49,
                "offset": 48
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 115,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 118,
                "column": 2
              },
              "end": {
                "line": 138,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Serializer.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Serializer.js#L118-L138",
              "path": "src/Serializer.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "value",
              "lineNumber": 118,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Serializer"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "addCompactSize",
          "kind": "function",
          "memberof": "Serializer",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Serializer",
              "kind": "class"
            },
            {
              "name": "addCompactSize",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Serializer#addCompactSize"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Serializer",
        "kind": "class"
      }
    ],
    "namespace": "Serializer"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A Bitcoin transaction",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 22,
                  "offset": 21
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 22,
              "offset": 21
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 22,
          "offset": 21
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 13,
        "column": 0
      },
      "end": {
        "line": 15,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 132,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Transaction.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Transaction.js#L16-L132",
        "path": "src/Transaction.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Transaction",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "Transaction",
        "kind": "class"
      }
    ],
    "namespace": "Transaction"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class for working with Hierarchical Deterministic (HD) Wallets per BIP-0032",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 76,
                  "offset": 75
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 76,
              "offset": 75
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Note: this class does ",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 77
                },
                "end": {
                  "line": 3,
                  "column": 23,
                  "offset": 99
                },
                "indent": []
              }
            },
            {
              "type": "emphasis",
              "children": [
                {
                  "type": "text",
                  "value": "not",
                  "position": {
                    "start": {
                      "line": 3,
                      "column": 24,
                      "offset": 100
                    },
                    "end": {
                      "line": 3,
                      "column": 27,
                      "offset": 103
                    },
                    "indent": []
                  }
                }
              ],
              "position": {
                "start": {
                  "line": 3,
                  "column": 23,
                  "offset": 99
                },
                "end": {
                  "line": 3,
                  "column": 28,
                  "offset": 104
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " implement BIP-0039 or BIP-0044.  See MnemonicSeed\nand AccountWallet classes respectively for those functionalities.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 28,
                  "offset": 104
                },
                "end": {
                  "line": 4,
                  "column": 66,
                  "offset": 220
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 77
            },
            "end": {
              "line": 4,
              "column": 66,
              "offset": 220
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 66,
          "offset": 220
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 19,
        "column": 0
      },
      "end": {
        "line": 24,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 25,
          "column": 0
        },
        "end": {
          "line": 332,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet.js#L25-L332",
        "path": "src/Wallet.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "masterPublicKey",
        "lineNumber": 30,
        "type": {
          "type": "NameExpression",
          "name": "ExtendedKey"
        }
      },
      {
        "title": "param",
        "name": "masterPrivateKey",
        "lineNumber": 30,
        "type": {
          "type": "NameExpression",
          "name": "ExtendedKey"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "Wallet",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "BIP-0032 function CKDpriv((kpar, cpar), i) → (ki, ci) computes a child extended\nprivate key from the parent extended private key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 49,
                        "offset": 128
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 49,
                    "offset": 128
                  },
                  "indent": [
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "TODO Pre-beta: Ensure we are handling this edge case:\n\"In case parse256(IL) ≥ n or ki = 0, the resulting key is invalid, and one should\nproceed with the next value for i. (Note: this has probability lower than 1 in 2127.)\"",
                    "position": {
                      "start": {
                        "line": 4,
                        "column": 1,
                        "offset": 130
                      },
                      "end": {
                        "line": 6,
                        "column": 87,
                        "offset": 352
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 4,
                    "column": 1,
                    "offset": 130
                  },
                  "end": {
                    "line": 6,
                    "column": 87,
                    "offset": 352
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 6,
                "column": 87,
                "offset": 352
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 148,
                "column": 2
              },
              "end": {
                "line": 215,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet.js#L148-L215",
              "path": "src/Wallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "parent",
              "lineNumber": 149,
              "type": {
                "type": "NameExpression",
                "name": "ExtendedKey"
              }
            },
            {
              "title": "param",
              "name": "childDepth",
              "lineNumber": 150,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "childNumber",
              "lineNumber": 151,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "ExtendedKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "_derivePrivateChildFromPrivate",
          "kind": "function",
          "memberof": "Wallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Wallet",
              "kind": "class"
            },
            {
              "name": "_derivePrivateChildFromPrivate",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Wallet#_derivePrivateChildFromPrivate"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "BIP-0032 function N((k, c)) → (K, c) computes the extended public key corresponding\nto an extended private key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 2,
                        "column": 27,
                        "offset": 110
                      },
                      "indent": [
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 2,
                    "column": 27,
                    "offset": 110
                  },
                  "indent": [
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 2,
                "column": 27,
                "offset": 110
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 217,
              "column": 2
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 221,
                "column": 2
              },
              "end": {
                "line": 258,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet.js#L221-L258",
              "path": "src/Wallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "parent",
              "lineNumber": 222,
              "type": {
                "type": "NameExpression",
                "name": "ExtendedKey"
              }
            },
            {
              "title": "param",
              "name": "childDepth",
              "lineNumber": 223,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "childNumber",
              "lineNumber": 224,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "ExtendedKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "_derivePublicChildFromPrivate",
          "kind": "function",
          "memberof": "Wallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Wallet",
              "kind": "class"
            },
            {
              "name": "_derivePublicChildFromPrivate",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Wallet#_derivePublicChildFromPrivate"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "BIP-0032 function CKDpub((Kpar, cpar), i) → (Ki, ci) computes a child extended\npublic key from the parent extended public key. It only works for non-hardened\nchild keys.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 3,
                        "column": 12,
                        "offset": 169
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 3,
                    "column": 12,
                    "offset": 169
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "TODO Pre-beta: Ensure we are handling this edge case:\n\"In case parse256(IL) ≥ n or Ki is the point at infinity, the resulting key is\ninvalid, and one should proceed with the next value for i.\"",
                    "position": {
                      "start": {
                        "line": 5,
                        "column": 1,
                        "offset": 171
                      },
                      "end": {
                        "line": 7,
                        "column": 60,
                        "offset": 363
                      },
                      "indent": [
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 5,
                    "column": 1,
                    "offset": 171
                  },
                  "end": {
                    "line": 7,
                    "column": 60,
                    "offset": 363
                  },
                  "indent": [
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 7,
                "column": 60,
                "offset": 363
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 260,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 269,
                "column": 2
              },
              "end": {
                "line": 331,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet.js#L269-L331",
              "path": "src/Wallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "parent",
              "lineNumber": 270,
              "type": {
                "type": "NameExpression",
                "name": "ExtendedKey"
              }
            },
            {
              "title": "param",
              "name": "childDepth",
              "lineNumber": 271,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "childNumber",
              "lineNumber": 272,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "ExtendedKey"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "_derivePublicChildFromPublic",
          "kind": "function",
          "memberof": "Wallet",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Wallet",
              "kind": "class"
            },
            {
              "name": "_derivePublicChildFromPublic",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "Wallet#_derivePublicChildFromPublic"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Build unique signature for a child key derivation request.",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 59,
                        "offset": 58
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 59,
                    "offset": 58
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "These signatures are used as the key in the _childKeyCache",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 60
                      },
                      "end": {
                        "line": 3,
                        "column": 59,
                        "offset": 118
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 60
                  },
                  "end": {
                    "line": 3,
                    "column": 59,
                    "offset": 118
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 59,
                "offset": 118
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 130,
                "column": 2
              },
              "end": {
                "line": 138,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet.js#L130-L138",
              "path": "src/Wallet.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "type",
              "lineNumber": 130,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "StringLiteralType",
                    "value": "pub"
                  },
                  {
                    "type": "StringLiteralType",
                    "value": "prv"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "parent",
              "lineNumber": 130,
              "type": {
                "type": "NameExpression",
                "name": "ExtendedKey"
              }
            },
            {
              "title": "param",
              "name": "childDepth",
              "lineNumber": 130,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "param",
              "name": "childNumber",
              "lineNumber": 130,
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "_getChildKeyRequestSignature",
          "kind": "function",
          "memberof": "Wallet",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "Wallet",
              "kind": "class"
            },
            {
              "name": "_getChildKeyRequestSignature",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "Wallet._getChildKeyRequestSignature"
        }
      ]
    },
    "path": [
      {
        "name": "Wallet",
        "kind": "class"
      }
    ],
    "namespace": "Wallet"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Type of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "DerivationPath",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "DerivationPath"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 9,
                  "offset": 8
                },
                "end": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": " - pubic or private key",
              "position": {
                "start": {
                  "line": 1,
                  "column": 31,
                  "offset": 30
                },
                "end": {
                  "line": 1,
                  "column": 54,
                  "offset": 53
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 54,
              "offset": 53
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In the example \"m/44'/0'/0'\", the \"m\" indicates a private\nkey.  A capital \"M\" would represent a public key.",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 55
                },
                "end": {
                  "line": 4,
                  "column": 50,
                  "offset": 162
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 55
            },
            "end": {
              "line": 4,
              "column": 50,
              "offset": 162
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 50,
          "offset": 162
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 8,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 54
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L3-L8",
        "path": "src/Wallet/DerivationPath.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "DerivationPathType",
    "kind": "typedef",
    "type": {
      "type": "UnionType",
      "elements": [
        {
          "type": "StringLiteralType",
          "value": "public"
        },
        {
          "type": "StringLiteralType",
          "value": "private"
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DerivationPathType",
        "kind": "typedef"
      }
    ],
    "namespace": "DerivationPathType"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A single level in a ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "DerivationPath",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "DerivationPath"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 21,
                  "offset": 20
                },
                "end": {
                  "line": 1,
                  "column": 43,
                  "offset": 42
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 43,
              "offset": 42
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "In the example \"m/44'/0'/0'\", the \"44'\" and each of the\n\"0'\"s represent one level",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 44
                },
                "end": {
                  "line": 4,
                  "column": 26,
                  "offset": 125
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 44
            },
            "end": {
              "line": 4,
              "column": 26,
              "offset": 125
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 26,
          "offset": 125
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 11,
        "column": 0
      },
      "end": {
        "line": 16,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 2
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L11-L16",
        "path": "src/Wallet/DerivationPath.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [
      {
        "title": "property",
        "name": "depth",
        "lineNumber": 18,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "property",
        "name": "childNumber",
        "lineNumber": 19,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "property",
        "name": "hardened",
        "lineNumber": 20,
        "type": {
          "type": "NameExpression",
          "name": "boolean"
        }
      }
    ],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "DerivationPathLevel",
    "kind": "typedef",
    "type": {
      "type": "RecordType",
      "fields": [
        {
          "type": "FieldType",
          "key": "depth",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "childNumber",
          "value": {
            "type": "NameExpression",
            "name": "number"
          }
        },
        {
          "type": "FieldType",
          "key": "hardened",
          "value": {
            "type": "NameExpression",
            "name": "boolean"
          }
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DerivationPathLevel",
        "kind": "typedef"
      }
    ],
    "namespace": "DerivationPathLevel"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "An array of ",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "indent": []
              }
            },
            {
              "type": "link",
              "url": "DerivationPathLevel",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "DerivationPathLevel"
                }
              ],
              "position": {
                "start": {
                  "line": 1,
                  "column": 13,
                  "offset": 12
                },
                "end": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "indent": []
              }
            },
            {
              "type": "text",
              "value": "s",
              "position": {
                "start": {
                  "line": 1,
                  "column": 40,
                  "offset": 39
                },
                "end": {
                  "line": 1,
                  "column": 41,
                  "offset": 40
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 41,
              "offset": 40
            },
            "indent": []
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 1,
          "column": 41,
          "offset": 40
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 23,
        "column": 0
      },
      "end": {
        "line": 25,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 62
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L23-L25",
        "path": "src/Wallet/DerivationPath.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "DerivationPathLevels",
    "kind": "typedef",
    "type": {
      "type": "TypeApplication",
      "expression": {
        "type": "NameExpression",
        "name": "Array"
      },
      "applications": [
        {
          "type": "NameExpression",
          "name": "DerivationPathLevel"
        }
      ]
    },
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "DerivationPathLevels",
        "kind": "typedef"
      }
    ],
    "namespace": "DerivationPathLevels"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Class for handling BIP32 derivation paths - a method of specifying a private\nor public extended key in a key tree.",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 2,
                  "column": 38,
                  "offset": 114
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 2,
              "column": 38,
              "offset": 114
            },
            "indent": [
              1
            ]
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A derivation path is a string in the format of format \"m/n'/n'/n'\" where:",
              "position": {
                "start": {
                  "line": 4,
                  "column": 1,
                  "offset": 116
                },
                "end": {
                  "line": 4,
                  "column": 74,
                  "offset": 189
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 4,
              "column": 1,
              "offset": 116
            },
            "end": {
              "line": 4,
              "column": 74,
              "offset": 189
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "  m or M   is a literal.  Lowercase is a private key; uppercase is public key\n  /        is a literal indicatating is an optional level (zero or more)\n  n        the child key number in the current level\n  '        optionally nominates the suffixed child key as hardened (subscript 'H' is the\n           notation used in the BIP but apostrophe suffix is the public convention)",
              "position": {
                "start": {
                  "line": 6,
                  "column": 1,
                  "offset": 191
                },
                "end": {
                  "line": 10,
                  "column": 84,
                  "offset": 567
                },
                "indent": [
                  1,
                  1,
                  1,
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 6,
              "column": 1,
              "offset": 191
            },
            "end": {
              "line": 10,
              "column": 84,
              "offset": 567
            },
            "indent": [
              1,
              1,
              1,
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 10,
          "column": 84,
          "offset": 567
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 28,
        "column": 0
      },
      "end": {
        "line": 39,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 144,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L40-L144",
        "path": "src/Wallet/DerivationPath.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "constructorComment": {
      "description": "",
      "tags": [
        {
          "title": "hideconstructor",
          "description": null,
          "lineNumber": 1
        }
      ],
      "loc": {
        "start": {
          "line": 45,
          "column": 2
        },
        "end": {
          "line": 47,
          "column": 5
        }
      },
      "context": {
        "loc": {
          "start": {
            "line": 48,
            "column": 2
          },
          "end": {
            "line": 52,
            "column": 3
          }
        },
        "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
        "sortKey": "!/home/p/Git/cashlib/src/Wallet/DerivationPath.js 00000048",
        "code": "{\n  _type: DerivationPathType\n  _levels: DerivationPathLevels\n  _serialized: string\n\n  /**\n   * @hideconstructor\n   */\n  constructor(type: DerivationPathType, levels: DerivationPathLevels, serialized: string) {\n    this._type = type;\n    this._levels = levels;\n    this._serialized = serialized;\n  }\n\n  /**\n   * Returns a new path but with the type set to 'public'\n   */\n  toPublic() {\n    return new DerivationPath(\n      'public',\n      this._levels,\n      this._serialized,\n    );\n  }\n\n  /**\n   * Serializes the path into a string in the commonly used format\n   *\n   * E.g. returns \"m/44'/0'/0'\"\n   */\n  toSerialized(): string {\n    return this._serialized;\n  }\n\n  /**\n   * Creates a {@link DerivationPath} instance from a serialized string\n   *\n   * E.g. expects something like \"m/44'/0'/0'\"\n   */\n  static fromSerialized(serialized: string): DerivationPath {\n    // Determine type\n    const typeKey = serialized.substr(0, 1);\n    let type: DerivationPathType;\n    switch (typeKey) {\n      case 'm':\n        type = 'private';\n        break;\n      case 'M':\n        type = 'public';\n        break;\n      default:\n        throw new Error('Derivation path must begin with \"m\" or \"M\".');\n    }\n\n    // Decode levels\n    const levels: DerivationPathLevels = serialized\n      .substr(1)\n      .replace(/'/g, \",'\")\n      .split('/')\n      .filter(rec => rec !== '')\n      .map((encodedLevel, index) => {\n        const levelAndHardened = encodedLevel.split(',');\n        const hardened = levelAndHardened[1] !== undefined && levelAndHardened[1] === \"'\";\n        let childNumber = parseInt(levelAndHardened[0], 10);\n        if (hardened) {\n          childNumber += (2 ** 31);\n        }\n        return {\n          depth: index + 1,\n          childNumber,\n          hardened,\n        };\n      });\n\n    return new DerivationPath(type, levels, serialized);\n  }\n\n  /**\n   */\n  get type(): DerivationPathType { return this._type; }\n\n  /**\n   */\n  get isPrivate(): boolean { return this._type === 'private'; }\n\n  /**\n   */\n  get isPublic(): boolean { return this._type === 'public'; }\n\n  /**\n   * Number of levels in this path\n   */\n  get numLevels(): number { return this._levels.length; }\n\n  /**\n   * {@link DerivationPathLevels} for this path\n   */\n  get levels(): DerivationPathLevels {\n    // Return deep copy so our prop is immutable\n    // (We expect returned array to be heavily modified during stack processing)\n    return this._levels\n      .slice()\n      .map(level => Object.assign({}, level));\n  }\n}"
      },
      "augments": [],
      "errors": [],
      "examples": [],
      "params": [],
      "properties": [],
      "returns": [],
      "sees": [],
      "throws": [],
      "todos": [],
      "hideconstructor": true
    },
    "name": "DerivationPath",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns a new path but with the type set to 'public'",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 53,
                        "offset": 52
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 53,
                    "offset": 52
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 53,
                "offset": 52
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 57,
                "column": 2
              },
              "end": {
                "line": 63,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L57-L63",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toPublic",
          "kind": "function",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "toPublic",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#toPublic"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Serializes the path into a string in the commonly used format",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 62,
                        "offset": 61
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 62,
                    "offset": 61
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "E.g. returns \"m/44'/0'/0'\"",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 63
                      },
                      "end": {
                        "line": 3,
                        "column": 27,
                        "offset": 89
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 63
                  },
                  "end": {
                    "line": 3,
                    "column": 27,
                    "offset": 89
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 27,
                "offset": 89
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 65,
              "column": 2
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 70,
                "column": 2
              },
              "end": {
                "line": 72,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L70-L72",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "toSerialized",
          "kind": "function",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "toSerialized",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#toSerialized"
        },
        {
          "description": "",
          "tags": [],
          "loc": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 119,
                "column": 2
              },
              "end": {
                "line": 119,
                "column": 55
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L119-L119",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "DerivationPathType"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "type",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "type",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#type"
        },
        {
          "description": "",
          "tags": [],
          "loc": {
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 123,
                "column": 2
              },
              "end": {
                "line": 123,
                "column": 63
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L123-L123",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "isPrivate",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "isPrivate",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#isPrivate"
        },
        {
          "description": "",
          "tags": [],
          "loc": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 127,
                "column": 2
              },
              "end": {
                "line": 127,
                "column": 61
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L127-L127",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "isPublic",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "isPublic",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#isPublic"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Number of levels in this path",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 30,
                        "offset": 29
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 30,
                    "offset": 29
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 30,
                "offset": 29
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 132,
                "column": 2
              },
              "end": {
                "line": 132,
                "column": 57
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L132-L132",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "numLevels",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "numLevels",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#numLevels"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "link",
                    "url": "DerivationPathLevels",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "DerivationPathLevels"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " for this path",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 29,
                        "offset": 28
                      },
                      "end": {
                        "line": 1,
                        "column": 43,
                        "offset": 42
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 43,
                    "offset": 42
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 1,
                "column": 43,
                "offset": 42
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 137,
                "column": 2
              },
              "end": {
                "line": 143,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L137-L143",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "DerivationPathLevels"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "levels",
          "kind": "member",
          "memberof": "DerivationPath",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "levels",
              "kind": "member",
              "scope": "instance"
            }
          ],
          "namespace": "DerivationPath#levels"
        }
      ],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates a ",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "link",
                    "url": "DerivationPath",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "DerivationPath"
                      }
                    ],
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 11,
                        "offset": 10
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " instance from a serialized string",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "end": {
                        "line": 1,
                        "column": 67,
                        "offset": 66
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 67,
                    "offset": 66
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "E.g. expects something like \"m/44'/0'/0'\"",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 68
                      },
                      "end": {
                        "line": 3,
                        "column": 42,
                        "offset": 109
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 68
                  },
                  "end": {
                    "line": 3,
                    "column": 42,
                    "offset": 109
                  },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 3,
                "column": 42,
                "offset": 109
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 2
              },
              "end": {
                "line": 115,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/DerivationPath.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/DerivationPath.js#L79-L115",
              "path": "src/Wallet/DerivationPath.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [
            {
              "title": "param",
              "name": "serialized",
              "lineNumber": 79,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "DerivationPath"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "fromSerialized",
          "kind": "function",
          "memberof": "DerivationPath",
          "scope": "static",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "DerivationPath",
              "kind": "class"
            },
            {
              "name": "fromSerialized",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "DerivationPath.fromSerialized"
        }
      ]
    },
    "path": [
      {
        "name": "DerivationPath",
        "kind": "class"
      }
    ],
    "namespace": "DerivationPath"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Extended private or public key per BIP-0032",
              "position": {
                "start": {
                  "line": 1,
                  "column": 1,
                  "offset": 0
                },
                "end": {
                  "line": 1,
                  "column": 44,
                  "offset": 43
                },
                "indent": []
              }
            }
          ],
          "position": {
            "start": {
              "line": 1,
              "column": 1,
              "offset": 0
            },
            "end": {
              "line": 1,
              "column": 44,
              "offset": 43
            },
            "indent": []
          }
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Extended keys are regular keys with an additional 256 bits of entropy (the\nchain code).",
              "position": {
                "start": {
                  "line": 3,
                  "column": 1,
                  "offset": 45
                },
                "end": {
                  "line": 4,
                  "column": 13,
                  "offset": 132
                },
                "indent": [
                  1
                ]
              }
            }
          ],
          "position": {
            "start": {
              "line": 3,
              "column": 1,
              "offset": 45
            },
            "end": {
              "line": 4,
              "column": 13,
              "offset": 132
            },
            "indent": [
              1
            ]
          }
        }
      ],
      "position": {
        "start": {
          "line": 1,
          "column": 1,
          "offset": 0
        },
        "end": {
          "line": 4,
          "column": 13,
          "offset": 132
        }
      }
    },
    "tags": [],
    "loc": {
      "start": {
        "line": 13,
        "column": 0
      },
      "end": {
        "line": 18,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 108,
          "column": 1
        }
      },
      "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
      "github": {
        "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/ExtendedKey.js#L19-L108",
        "path": "src/Wallet/ExtendedKey.js"
      }
    },
    "augments": [],
    "examples": [],
    "params": [
      {
        "title": "param",
        "name": "key",
        "lineNumber": 27,
        "type": {
          "type": "UnionType",
          "elements": [
            {
              "type": "NameExpression",
              "name": "PrivateKey"
            },
            {
              "type": "NameExpression",
              "name": "PublicKey"
            }
          ]
        }
      },
      {
        "title": "param",
        "name": "chainCode",
        "lineNumber": 28,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      },
      {
        "title": "param",
        "name": "depth",
        "lineNumber": 29,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "childNumber",
        "lineNumber": 30,
        "type": {
          "type": "NameExpression",
          "name": "number"
        }
      },
      {
        "title": "param",
        "name": "parentFingerprint",
        "lineNumber": 31,
        "type": {
          "type": "NameExpression",
          "name": "Uint8Array"
        }
      }
    ],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "name": "ExtendedKey",
    "kind": "class",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Return signature of extended key",
                    "position": {
                      "start": {
                        "line": 1,
                        "column": 1,
                        "offset": 0
                      },
                      "end": {
                        "line": 1,
                        "column": 33,
                        "offset": 32
                      },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 1,
                    "column": 1,
                    "offset": 0
                  },
                  "end": {
                    "line": 1,
                    "column": 33,
                    "offset": 32
                  },
                  "indent": []
                }
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The signature is a hex string with enough data to uniquiely id the\nextended key without collision. It is effectively the serialized\nextended key (refer BIP-0032#Serialization_format) but devoid of\nthe network prefix and is not hashed",
                    "position": {
                      "start": {
                        "line": 3,
                        "column": 1,
                        "offset": 34
                      },
                      "end": {
                        "line": 6,
                        "column": 37,
                        "offset": 267
                      },
                      "indent": [
                        1,
                        1,
                        1
                      ]
                    }
                  }
                ],
                "position": {
                  "start": {
                    "line": 3,
                    "column": 1,
                    "offset": 34
                  },
                  "end": {
                    "line": 6,
                    "column": 37,
                    "offset": 267
                  },
                  "indent": [
                    1,
                    1,
                    1
                  ]
                }
              }
            ],
            "position": {
              "start": {
                "line": 1,
                "column": 1,
                "offset": 0
              },
              "end": {
                "line": 6,
                "column": 37,
                "offset": 267
              }
            }
          },
          "tags": [],
          "loc": {
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 70,
                "column": 2
              },
              "end": {
                "line": 85,
                "column": 3
              }
            },
            "file": "/home/p/Git/cashlib/src/Wallet/ExtendedKey.js",
            "github": {
              "url": "https://github.com/proehlen/cashlib/blob/2994ca4a0491aa7046fb991c2b49458db8dbdb99/src/Wallet/ExtendedKey.js#L70-L85",
              "path": "src/Wallet/ExtendedKey.js"
            }
          },
          "augments": [],
          "examples": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "name": "getSignature",
          "kind": "function",
          "memberof": "ExtendedKey",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "ExtendedKey",
              "kind": "class"
            },
            {
              "name": "getSignature",
              "kind": "function",
              "scope": "instance"
            }
          ],
          "namespace": "ExtendedKey#getSignature"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "ExtendedKey",
        "kind": "class"
      }
    ],
    "namespace": "ExtendedKey"
  }
]